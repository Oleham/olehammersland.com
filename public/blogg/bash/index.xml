<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ole Hammersland sin blogg</title>
    <link>https://www.olehammersland.com/blogg/bash/</link>
    <description>Ole Hammersland sin blogg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Ole Hammersland¬©2021</copyright>
    <lastBuildDate>Mon, 04 Oct 2021 17:02:15 +0200</lastBuildDate><atom:link href="https://www.olehammersland.com/blogg/bash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fornyelse av Let&#39;s Encrypt-sertifikat</title>
      <link>https://www.olehammersland.com/blogg/fornyelse-letsencrypt-sertifikat/</link>
      <pubDate>Mon, 04 Oct 2021 17:02:15 +0200</pubDate>
      
      <guid>https://www.olehammersland.com/blogg/fornyelse-letsencrypt-sertifikat/</guid>
      <description>&lt;p&gt;Jeg hoster min egen epost-tjener under domenet mitt, olehammersland.com. Det fungerer overraskende godt, og har ikke blitt et m√•l for storsl√•tte spam-angrep enn√• (fingrene krysset). Dermed er det en billig m√•te √• ha en e-post med eget domenenavn ‚Äì og litt g√∏y √• ha ¬´fikset det selv¬ª. Det eneste som er litt skummelt, er n√•r det er p√• tide √• oppdatere SSL-sertifikatet. Siden jeg s√• sjelden √•pner panseret og gj√∏r arbeid p√• tjeneren, er det alltid litt uvant √• orientere seg.&lt;/p&gt;
&lt;p&gt;I dag tidlig var det f.eks. p√• tide √• fornye sertifikatet, som var l√∏pt ut i l√∏pet av helgens Paris-Roubaix-ritt. Jeg gjorde prosessen slik jeg husket det, men glemte √• restarte alle programmene som er involvert i e-posttjenesten min. Dermed fungerte fornyelsen av sertifikatet mitt √∏yensynlig ikke, og det ble en lett stresset og irritabel start p√• dagen.&lt;/p&gt;
&lt;p&gt;Derfor skriver jeg n√• en liten huskeliste til meg selv:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Skru av b√•de Apache, Postfix &lt;strong&gt;OG&lt;/strong&gt; Dovecot med &lt;code&gt;sudo service [---] stop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Kj√∏r Certbot, som av en eller annen grunn ikke ligger under PATH: &lt;code&gt;sudo ~/snap/bin/certbot renew&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Sjekk at alt er fornyet med &lt;code&gt;sudo ~/snap/bin/certbot certificates&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start de tre daemonene igjen.&lt;/li&gt;
&lt;li&gt;Sjekk ev. &lt;code&gt;/var/log/mail.log&lt;/code&gt; for √• se at e-posten er oppe.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Viktig √• huske √• skru av b√•de Postfix og Dovecot üòÖ!&lt;/p&gt;
&lt;p&gt;Og ja, dette kan selvf√∏lgelig automatiseres, det vet jeg. Vet bare ikke om jeg orker √• stikke fingeren i det vepsebolet i n√¶rmeste fremtid&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hammer Faktura versjon 3</title>
      <link>https://www.olehammersland.com/blogg/hammer-faktura-versjon-3/</link>
      <pubDate>Sun, 21 Mar 2021 18:16:42 +0100</pubDate>
      
      <guid>https://www.olehammersland.com/blogg/hammer-faktura-versjon-3/</guid>
      <description>&lt;p&gt;Jeg har oppdatert Hammer Faktura igjen! I denne bloggposten g√•r jeg gjennom hva som er nytt, og gir litt dokumentasjon p√• hvordan man kan bruke programmet.&lt;/p&gt;
&lt;h2 id=&#34;nytt-i-hammer-faktura-versjon-3&#34;&gt;Nytt i Hammer Faktura versjon 3:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;St√∏tte for sqlite-database muliggj√∏r lagring av fakturaposter, kunder, bankinformasjon og fakturaer.&lt;/li&gt;
&lt;li&gt;Kommandolinjeverkt√∏y for direkte samhandling med databasen.&lt;/li&gt;
&lt;li&gt;Wrapper-funksjoner som forenkler prosessen med √• opprette faktuaene.&lt;/li&gt;
&lt;li&gt;St√∏tte for enkel flerspr√•klighet, slik at jeg kan skrive ut engelske fakturaer.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;De tidligere utgavene av Hammer Faktura har kun hatt st√∏tte for √• opprette fakturaene. Fakturaene har blitt opprettet ved √• kj√∏re data fra eksterne kilder gjennom programmet. N√• legger jeg til st√∏tte for √• lagre all relevant informasjon i en egen database. En database er i prinsippet som et Excel-regneark: den inneholder ulike tabeller som er knyttet sammen. Man kan samhandle med databasen med sp√∏rringsspr√•ket SQL, eller med andre verkt√∏y og drivere.&lt;/p&gt;
&lt;p&gt;Det er det som er fint med √• lagre all informasjonen i en SQL-database: det er en ganske agnostisk m√•te √• lagre data p√•. Det finnes utallige m√•ter √• hente dataene og kj√∏re regnestykker og analyser p√• dem, og det er ikke knyttet til noe spesielt program eller programmeringsspr√•k. Den sentraliserte datastrukturen burde tilfredsstille alle behovene mine for regnskapsf√∏ring: f.eks kan jeg regne ut hvor mye penger jeg tjente i l√∏pet av en viss tidsperiode, hvor mye MVA jeg har betalt, hvor mange oppdrag jeg har f√•tt fra kunde X, osv.&lt;/p&gt;
&lt;p&gt;Hammer Faktura har f√•tt en egen modul, &lt;code&gt;hfdb&lt;/code&gt;(Hammer Faktura -database), som er ansvarlig for √• samhandle med databasen og knytte informasjonen der sammen med programmet mitt.&lt;/p&gt;
&lt;p&gt;Hammer Faktura kan n√• dessuten &lt;a href=&#34;#kommandolinjeverkt%C3%B8y&#34;&gt;kj√∏res direkte som et skript&lt;/a&gt; med &amp;ldquo;-m&amp;rdquo; flagget til Python.&lt;/p&gt;
&lt;h2 id=&#34;dokumentasjon&#34;&gt;Dokumentasjon&lt;/h2&gt;
&lt;h3 id=&#34;hurtigstart&#34;&gt;Hurtigstart&lt;/h3&gt;
&lt;p&gt;Last ned modulen:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/Oleham/hammer_faktura.git
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Opprett en tom database i n√•v√¶rende mappe. Navnet vil alltid v√¶re &lt;code&gt;hammer_faktura.db&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ python3 -m hammer_faktura.create_tables
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Importer database-modulen &lt;code&gt;hammerfaktura.hfdb&lt;/code&gt; i skriptet ditt. Den inneholder funksjoner for √• samhandle med databasen.
Lag en enkel faktura for ett oppdrag:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#ccc;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#cd00cd&#34;&gt;from&lt;/span&gt; hammer_faktura &lt;span style=&#34;color:#cd00cd&#34;&gt;import&lt;/span&gt; hfdb

&lt;span style=&#34;color:#000080&#34;&gt;# Legg til en kunde i databasen.&lt;/span&gt;
client_pk &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; hfdb&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;addClient(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Kunde&amp;#34;&lt;/span&gt;, 
                            &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;934 343 343&amp;#34;&lt;/span&gt;,
                            &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Adresseveien 4, 1234 Oslo&amp;#34;&lt;/span&gt;, 
                            &lt;span style=&#34;color:#cd00cd&#34;&gt;0.25&lt;/span&gt;, 
                            &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;NOK&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#000080&#34;&gt;# Legg til bankinformasjonen din i databasen.&lt;/span&gt;
bank_pk &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; hfdb&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;addBank(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;123.2312.2323&amp;#34;&lt;/span&gt;, 
                        &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;NO87234233&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;NONKIRE&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Banken AS&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#000080&#34;&gt;# Verdien p√• jobben&lt;/span&gt;
value &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cd00cd&#34;&gt;2320.3&lt;/span&gt;

generator &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; hfdb&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;quickGeneratorFromItem(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;01.01.1990&amp;#34;&lt;/span&gt;,
                                        &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;ID-231&amp;#34;&lt;/span&gt;,
                                        &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Oversettelse kokebok&amp;#34;&lt;/span&gt;,
                                        value,
                                        client_pk, 
                                        bank_pk)

invoice &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; generator&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;makeInvoiceBody()

&lt;span style=&#34;color:#cdcd00&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#cd00cd&#34;&gt;open&lt;/span&gt;(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;faktura.html&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#cdcd00&#34;&gt;as&lt;/span&gt; f:
    f&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;write(invoice)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;hfdb.quickGeneratorFromItem&lt;/code&gt; lar oss legge til en jobb i databasen og umiddelbart skape en faktura for den. Med &lt;code&gt;hfdb.quickGeneratorFromList&lt;/code&gt; kan vi p√• samme m√•te legge inn flere oppdrag og umiddelbart skape en faktura.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#ccc;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;jobber &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; [{&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;dato&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd00cd&#34;&gt;1615968966&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;1234&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;beskrivelse&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Oversettelse avis&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;netto&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd00cd&#34;&gt;320.12&lt;/span&gt;
    }, 
    {&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;dato&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd00cd&#34;&gt;1615968100&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;5678&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;beskrivelse&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Korrekturlesning 4 timer&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;netto&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd00cd&#34;&gt;1030.20&lt;/span&gt;
    }, 
    {&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;dato&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd00cd&#34;&gt;1616328966&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;ABCDF&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;beskrivelse&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Kokebok&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;netto&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd00cd&#34;&gt;365.06&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;vat&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd00cd&#34;&gt;0.15&lt;/span&gt; &lt;span style=&#34;color:#000080&#34;&gt;# obs!&lt;/span&gt;
    } 
]

generator &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; hfdb&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;quickGeneratorFromList(jobber, client_pk, bank_pk)

invoice &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; generator&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;makeInvoiceBody()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Merk at det er valgfritt √• oppgi en mva-sats p√• enkeltjobbene. Om det ikke oppgis noen mva-sats, vil standardsatsen for den aktuelle kunden velges (i dette tilfellet 0.25, alts√• 25 %)&lt;/p&gt;
&lt;h3 id=&#34;samhandling-med-databasen&#34;&gt;Samhandling med databasen&lt;/h3&gt;
&lt;p&gt;La oss ta en titt p√• hva som skjer i bakgrunnen. Da er det nyttig √• f√∏rst kaste et blikk p√• strukturen til databasen:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.olehammersland.com/images/blogg/hammer_faktura_database.jpg&#34; alt=&#34;En skjematisk fremstilling av databasen&#34;&gt;&lt;/p&gt;
&lt;p&gt;Som vi ser, best√•r databasen av fire tabeller: invoices, invoice_items, clients og banks. Den viktigste tabellen som knytter alle tabellene sammen, er invoices. Det er alltid knyttet en client og en bank til hver invoice, i et √©n-til-√©n-forhold. Samtidig kan flere poster i invoice_items, som representerer de enkelte jobbene, v√¶re knyttet til en invoice i et mange-til-√©n-forhold (en faktura kan inneholde flere fakturaposter).&lt;/p&gt;
&lt;p&gt;I forrige avsnitt viste jeg hvordan man veldig raskt kan skape fakturaer med &lt;code&gt;hfdb.quickGeneratorFromItem&lt;/code&gt; og &lt;code&gt;hfdb.quickGeneratorFromList&lt;/code&gt;. Dette er faktisk to wrapper-funksjoner som ¬´wrapper¬ª en rekke funksjoner for samhandling med databasen, med den hensikt √• gj√∏re det s√• enkelt s√• mulig √• opprette en faktura hurtig. De gj√∏r to ting med informasjonen som gis dem: de legger dem til i databasen, og s√• returnerer de en &lt;code&gt;hammer_faktura.Generator&lt;/code&gt;, som vi kan bruke for √• skape en faktura.&lt;/p&gt;
&lt;p&gt;La oss ta en titt p√• hva som skjer i bakgrunnen n√•r vi bruker disse wrapper-funksjonene:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#ccc;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#cd00cd&#34;&gt;from&lt;/span&gt; hammer_faktura &lt;span style=&#34;color:#cd00cd&#34;&gt;import&lt;/span&gt; hfdb

jobber &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; [{&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;dato&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd00cd&#34;&gt;1615968100&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;5678&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;beskrivelse&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Korrekturlesning 4 timer&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;netto&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd00cd&#34;&gt;1030.20&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;client&amp;#34;&lt;/span&gt;: client_pk  &lt;span style=&#34;color:#000080&#34;&gt;# obs!&lt;/span&gt;
    },
    [&lt;span style=&#34;&#34;&gt;‚Ä¶&lt;/span&gt;]

&lt;span style=&#34;color:#cdcd00&#34;&gt;for&lt;/span&gt; jobb &lt;span style=&#34;color:#cdcd00&#34;&gt;in&lt;/span&gt; jobber:
    hfdb&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;addItem(jobb)  

invoice_number &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; hfdb&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;addInvoice(client_pk, bank_pk, 
                    dato&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;timestamp, 
                    frist&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd00cd&#34;&gt;30&lt;/span&gt;, 
                    language&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;NO&amp;#34;&lt;/span&gt;)
                                                                                     
hfdb&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;assignItemsByDate(invoice_number, 
                    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;16.03.2021&amp;#34;&lt;/span&gt;,
                    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;21.03.2021&amp;#34;&lt;/span&gt;)  
  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I dette eksempelet lagrer vi jobbene manuelt i databasen med &lt;code&gt;hfdb.addItem()&lt;/code&gt;. Jobbene lagres i tabellen invoice_items. Merk at vi n√• er n√∏dt til √• oppgi hvem som er client for hver enkelt jobb, siden vi n√• legger til jobbene ¬´uavhengig¬ª av en faktura.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hfdb.addInvoice()&lt;/code&gt; lagrer en faktura i databasen, i tabellen invoices. Det er kun n√∏dvendig √• oppgi en kunde og bankinformasjon. Vi kan ogs√• oppgi f√∏lgende: en egendefinert fakturadato (som timestamp ‚Äì standard er dagens dato), en egendefinert frist eller velge et annet spr√•k enn norsk. I bakgrunnen blir det automatisk generert et fakturanummer som returneres og lagres i variabelen invoice_number.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hfdb.assignItemsByDate()&lt;/code&gt; knytter s√• en rekke invoice_item til en invoice i et √©n-til-flere-forhold. Dette forholdet etableres f√∏rst n√•r vi kj√∏rer denne funksjonen ‚Äì fakturaposter som enn√• ikke er blitt ber√∏rt, vil ikke v√¶re tilknyttet noen faktura i det hele tatt. Argumentene er fakturanummeret det gjelder og et datospenn. Alle poster i invoice_items med samme client som fakturaen og leveringsdato innenfor tidsspennet, blir knyttet til fakturaen.&lt;/p&gt;
&lt;h3 id=&#34;skape-og-bruke-fakturageneratoren&#34;&gt;Skape og bruke fakturageneratoren&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#ccc;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;[&lt;span style=&#34;&#34;&gt;‚Ä¶&lt;/span&gt;]

generator &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; hfdb&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;makeGenerator(invoice_number)  

body &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; generator&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;makeInvoiceBody()

&lt;span style=&#34;color:#cdcd00&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#cd00cd&#34;&gt;open&lt;/span&gt;(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;faktura.html&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#cdcd00&#34;&gt;as&lt;/span&gt; f:
    f&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;write(body)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Til slutt skaper vi generatoren med funksjonen &lt;code&gt;hfdb.makeGenerator()&lt;/code&gt;. Funksjonen tar et fakturanummer som argument, og forutsetter at det finnes poster i tabellen invoice_items som er knyttet til dette fakturanummeret. Det henter s√• all informasjon om client, bank, og invoice_items som er knyttet til fakturaen, og lagrer det i generatoren.&lt;/p&gt;
&lt;p&gt;Generatoren er en klasse med tre underklasser, client, invoice og bank, som til sammen inneholder all relevant informasjon om fakturaen fra databasen. Den har ogs√• en (wrapper-)metode &lt;code&gt;hammer_faktura.Generator.makeInvoiceBody&lt;/code&gt; som returnerer et html-dokument som en string. &lt;a href=&#34;https://www.olehammersland.com/blogg/fakturaer-del-to/#1-initialisere-kunde-bank-og-faktura&#34;&gt;Se min forrige post for mer informasjon om Generator-objektet&lt;/a&gt;. &lt;code&gt;hfdb.makeGenerator()&lt;/code&gt; er alts√• en n√∏kkelfunksjon som forvandler en post i tabellen invoices til en python-klasse vi kan bruke programmet v√•rt.Vi kan  manuelt overskrive feltene til hammer_faktura.Generator-objektet, f.eks slik:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#ccc;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;generator &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; hfdb&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;quickGeneratorFromList(jobber, client_pk, bank_pk)

generator&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;invoice&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;language &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;        &lt;span style=&#34;color:#000080&#34;&gt;# endre spr√•k.&lt;/span&gt;
generator&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;invoice&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;forfall &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;01.01.2020&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000080&#34;&gt;# overskrive forfallsdatoen&lt;/span&gt;
generator&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;client&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;vat &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cd00cd&#34;&gt;0.3&lt;/span&gt;               &lt;span style=&#34;color:#000080&#34;&gt;# overskrive mva-satsen&lt;/span&gt;
generator&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;invoice_items[&lt;span style=&#34;color:#cd00cd&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;beskrivelse&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#39c&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34; m.m.&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000080&#34;&gt;# endre en jobb&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Man skal imidlertid ha en ganske god grunn for √• gj√∏re det, for endringene vil ikke gjenspeiles i databasen, kun p√• fakturaen man s√• genererer. Om man vil endre p√• innholdet i databasen, m√• det gj√∏re med funksjonene i &lt;code&gt;hfdb&lt;/code&gt;-modulen.&lt;/p&gt;
&lt;h3 id=&#34;navn-og-kontrakter&#34;&gt;Navn og kontrakter&lt;/h3&gt;
&lt;p&gt;I dette prosjektet har jeg blitt inspirert av boken jeg leser for tiden, &lt;em&gt;The Go Programming Language&lt;/em&gt;. Forfatterne av boken g√•r n√∏ye gjennom navnekonvensjonene i Go, og det har v√¶rt l√¶rerikt √• tiln√¶rme seg en lignende konsekvenstenking n√•r jeg definerer funksjoner og oppf√∏rsel i dette prosjektet.&lt;/p&gt;
&lt;p&gt;Som den oppmerksomme leser kanskje har f√•tt med seg, finnes det en rekke funksjoner i Hammer Faktura med prefikset ¬´add¬ª, etterfulgt av et objekt i singular. ¬´addInvoice¬ª, ¬´addItem¬ª, ¬´addClient¬ª og ¬´addBank¬ª. Alle disse korresponderer med en tabell i databasen.&lt;/p&gt;
&lt;p&gt;Wrapper-funksjonene starter med ¬´quick¬ª og gir allerede i navnet et hint om hvilke argumenter som m√• f√∏lge: ¬´quickGeneratorFromList¬ª eller ¬´quickGeneratorFromItem¬ª.&lt;/p&gt;
&lt;p&gt;Hva er poenget? Hvorfor ikke bare kalle funksjonene for ¬´funksjon1¬ª eller ¬´asdfgh¬ª?&lt;/p&gt;
&lt;p&gt;Vel, ved √• skape lignende navn og lignende oppf√∏rsel blir det lettere √• lese og forst√• koden. Det skaper en slags ¬´kontrakt¬ª mellom brukeren og modulen. Konsekvenstenkingen vil ogs√• gj√∏re det lettere for meg √• plukke opp koden p√• et senere tidspunkt. Jeg har for eksempel bestemt at alle ¬´addX¬ª-funksjonene legger til noe i databasen, og at de returnerer prim√¶rn√∏kkelen for den posten de nettopp la til. Dette skal da gjennomf√∏res konsekvent, selv om jeg som regel ikke bruker denne returverdien til noe, unntatt i ¬´addInvoice¬ª. Om jeg i fremtiden vil bruke Hammer Faktura p√• en ny m√•te, vet jeg imidlertid at det er en mulighet. Det vil ogs√• gj√∏re det lettere √• skumme gjennom listen over funksjoner og se hvilke nye funksjoner som kan legges til. Kanskje vil jeg legge til en funksjon kalt ¬´assignItemsById¬ª for √• knytte fakturaposter til fakturaer etter jobb-id, i stedet for etter et datospenn med ¬´assignItemsByDate¬ª.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;def addItem(values)&lt;/li&gt;
&lt;li&gt;def addClient(navn, org_nr, adresse, vat, valuta)&lt;/li&gt;
&lt;li&gt;def addBank(konto, iban, bic, bank)&lt;/li&gt;
&lt;li&gt;def addInvoice(client, bank, dato=int(time.time()), frist=30, language=&amp;ldquo;NO&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;def assignItemsByDate(invoice, _from, to)&lt;/li&gt;
&lt;li&gt;def makeGenerator(id)&lt;/li&gt;
&lt;li&gt;def quickGeneratorFromList(items, client, bank)&lt;/li&gt;
&lt;li&gt;def quickGeneratorFromItem(dato, id, beskrivelse, netto, client, bank)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;N√•r jeg ser p√• listen over funksjoner, vil jeg si at det ser ganske forst√•elig ut (selvskryt skal man lytte til, for det kommer fra hjertet)! üò¨&lt;/p&gt;
&lt;p&gt;I henhold til SQL-konvensjoner er tabellene databasen skrevet i s√•kalt &lt;em&gt;snake case&lt;/em&gt; i stedet for &lt;em&gt;camel case&lt;/em&gt;, alts√• &lt;em&gt;slik_som_dette&lt;/em&gt; i stedet for &lt;em&gt;p√•DenneM√•ten&lt;/em&gt;. Dessuten st√•r tabellnavn alltid i flertall.&lt;/p&gt;
&lt;h3 id=&#34;kommandolinjeverkt√∏y&#34;&gt;Kommandolinjeverkt√∏y&lt;/h3&gt;
&lt;p&gt;Jeg har begynt √• lage st√∏tte for √• bruke Hammer Faktura i kommandolinjen. Inntil videre har jeg konsentrert meg spesielt om de operasjonene som ikke m√• gj√∏res s√• ofte: da tenker jeg p√• det √• legge til en ny kunde eller en ny bankforbindelse. Jeg har ogs√• st√∏tte for √• legge til en enkelt jobb i invoice_item.&lt;/p&gt;
&lt;p&gt;Slik kan Hammer Faktura brukes i kommandolinjen:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ python3 -m hammer_faktura

Usage: python3 -m hammer_faktura [-l/-a] &amp;lt;args&amp;gt;

        list: -l or --list (table name in plural, i.e. &amp;quot;invoices&amp;quot;)
        add: -a or --add (item, bank, client or invoice)

$ python3 -m hammer_faktura -l clients

3       Navn     Org        Adresse     0.25    NOK
4       Test     234234     Adresse     0.25    SEK
5       Navn     43443      Adresse     0.25    SEK
6       Probe    234233     Adresse     0.25    SEK

$ python3 -m hammer_faktura -a client &amp;quot;En ny kunde&amp;quot; 94233465 &amp;quot;Bakketoppen 4, 4567 Kristiansand&amp;quot; 0.25 NOK

        Name: En ny kunde
        Org_nr: 94233465
        Adresse: Bakketoppen 4, 4567 Kristiansand
        VAT rate: 0.25
        Valuta: NOK

Type Y to add client (Y)
Y
Added new client: En ny kunde, 94233465, Bakketoppen 4, 4567 Kristiansand, 0.25, NOK

$ python3 -m hammer_faktura -l clients

3       Navn            Org        Adresse               0.25    NOK
4       Test            234234     Adresse               0.25    SEK
5       Navn            43443      Adresse               0.25    SEK
6       Probe           234233     Adresse               0.25    SEK      
8       En ny kunde     94233465   Bakketoppen 4, 
                                   4567 Kristiansand     0.25    NOK
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Neste punkt p√• programmet vil v√¶re st√∏tte for √• lage en faktura direkte i kommandolinjen, p√• samme m√•te som &lt;code&gt;hfdb.quickGeneratorFromItem&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Oleham/hammer_faktura&#34;&gt;Se Hammer Faktura p√• Github!&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Parsing av e-poster üìÆ</title>
      <link>https://www.olehammersland.com/blogg/epost-parsing/</link>
      <pubDate>Tue, 16 Feb 2021 18:31:38 +0100</pubDate>
      
      <guid>https://www.olehammersland.com/blogg/epost-parsing/</guid>
      <description>&lt;p&gt;Det er ikke alltid mulig √• arbeide p√• en s√• effektiv m√•te som mulig. Ofte m√• man samarbeide med organisasjoner med en egen arbeidsflyt og kultur som ikke n√∏dvendigvis er forenlig med hurtig arbeid.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To av verstingene de fleste oversettere blir tvunget til √• bale med, er e-post og Excel-regneark.&lt;/strong&gt; Det er ikke s√• rart. For flere kunder som ikke n√∏dvendigvis er s√• teknisk kompetente, fremst√•r Excel som grei m√•te √• organisere tekst p√•. P√• samme m√•te er e-post en rask og umiddelbar m√•te √• sende ut en fil n√•r det ikke er noen etablert teknisk infrastruktur p√• plass enn√•. Men det er ikke noen solid m√•te √• arbeide p√•. Det er mange ulemper ved √• distribuere filer p√• e-post:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;oversikt&lt;/li&gt;
&lt;li&gt;kapasitet (mental og tidsmessig)&lt;/li&gt;
&lt;li&gt;stress&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Det f√∏rste punktet gjelder oversikt: til tross for at jeg har jobbet mye med e-post, f√∏ler jeg fortsatt ikke at jeg helt har knekket koden for hvordan man skal sortere e-poster s√• effektivt som mulig. Spesielt n√•r man ogs√• skal sortere flere kunder, flere kontaktpersoner og flere filer. Det har hendt meg at jeg har oversatt feil fil fordi jeg p√• samme tid fikk to filer tilsendt med tiln√¶rmet samme navn.&lt;/p&gt;
&lt;p&gt;Det at det tar tid √• sortere e-post, lagre vedlegg og vedlikeholde mappestrukturer, er ogs√• ganske opplagt.&lt;/p&gt;
&lt;p&gt;Balingen med e-post koster ogs√• mental &lt;em&gt;kapasitet&lt;/em&gt;. Man er n√∏dt til √• konsentrere seg, holde tunga rett i munnen og bruke tid p√• √• sortere og finne frem til riktig filer. Det er dessuten et &lt;em&gt;stressmoment&lt;/em&gt; som henter meg ut av flytsonen jeg helst vil v√¶re i n√•r jeg oversetter.
Dessuten er det vel nok rapporter n√• om at for mange e-poster ikke er bra for mental helse. Likevel&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;noen-kunder-elsker-e-post&#34;&gt;Noen kunder elsker e-post&lt;/h2&gt;
&lt;p&gt;Det er bare √• feise fakta. Som en stakkars frilanser er jeg jo der for √• oppfylle kundens behov. Da er det flaks at man kan tenne lys i stedet for √• forbanne m√∏rket ‚Äì ved √• l√¶re seg programmering.&lt;/p&gt;
&lt;p&gt;Her vil jeg vise frem to Python-skript jeg har for √• forenkle arbeidet med en kunde. Det er en stor kunde med et stort markedsf√∏ringsapparat: nyhetsbrev, bannere, TV-reklamer, you name it.
De sender meg ca. 15 e-poster daglig. Hver av disse e-postene inneholder et sted mellom 4 og 50 bilder (jpg eller gif). Bildene inneholder et f√∏rste utkast av det grafiske innholdet p√• opptil 6 forskjellige spr√•k. Min jobb er √• se p√• vedleggene med de norske layoutene og lese den norske teksten.&lt;/p&gt;
&lt;p&gt;Det √• lese gjennom bildene for √• lete etter feil tar, ikke s√• lang tid. Men det √• lese gjennom listen over vedlegg for √• finne de som er relevante for meg, tar litt tid. Heldigvis kan det automatiseres med Python üêç.&lt;/p&gt;
&lt;h2 id=&#34;parsing-med-mailparser&#34;&gt;Parsing med mailparser&lt;/h2&gt;
&lt;p&gt;Ved hjelp av &lt;a href=&#34;https://pypi.org/project/mail-parser/1.2.2/&#34;&gt;mailparser-biblioteket til Python&lt;/a&gt; har jeg derfor raskt laget et skript som:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Leter gjennom alle e-poster i samme mappe.&lt;/li&gt;
&lt;li&gt;Sorterer alle vedlegg etter avsender og e-post.&lt;/li&gt;
&lt;li&gt;Sletter alle som ikke er markert med NO for norsk.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Slik ser det ut:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#ccc;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#cd00cd&#34;&gt;import&lt;/span&gt; os&lt;span style=&#34;color:#39c&#34;&gt;,&lt;/span&gt; mailparser&lt;span style=&#34;color:#39c&#34;&gt;,&lt;/span&gt; re

&lt;span style=&#34;color:#000080&#34;&gt;# Loops over emails in current directory&lt;/span&gt;
&lt;span style=&#34;color:#cdcd00&#34;&gt;for&lt;/span&gt; raw_mail &lt;span style=&#34;color:#cdcd00&#34;&gt;in&lt;/span&gt; os&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;listdir():

    &lt;span style=&#34;color:#000080&#34;&gt;# Unpack all files except the python files.&lt;/span&gt;
    &lt;span style=&#34;color:#000080&#34;&gt;# It is assumed that the current directory only contains emails&lt;/span&gt;
    &lt;span style=&#34;color:#cdcd00&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#cdcd00&#34;&gt;not&lt;/span&gt; raw_mail&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;endswith(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;.py&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#cdcd00&#34;&gt;and&lt;/span&gt; os&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;isfile(raw_mail):

        &lt;span style=&#34;color:#000080&#34;&gt;# Extract sender and subject from email&lt;/span&gt;
        epost_obj &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; mailparser&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;parse_from_file(raw_mail)
        sender &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; epost_obj&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;from_[&lt;span style=&#34;color:#cd00cd&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#cd00cd&#34;&gt;1&lt;/span&gt;]
        subject &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; epost_obj&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;subject
        new_subject &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;sub(&lt;span style=&#34;color:#cd0000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;\W&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, subject)

        &lt;span style=&#34;color:#000080&#34;&gt;# Create a folder structure based on sender and subject&lt;/span&gt;
        image_path &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;join(sender, new_subject)
        os&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;makedirs(image_path, exist_ok&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;True)

        &lt;span style=&#34;color:#000080&#34;&gt;# Write all attachments to the corresponding folder&lt;/span&gt;
        epost_obj&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;write_attachments(image_path)

        &lt;span style=&#34;color:#000080&#34;&gt;# Delete all files that don&amp;#39;t contain NO in title&lt;/span&gt;
        &lt;span style=&#34;color:#cdcd00&#34;&gt;for&lt;/span&gt; attach &lt;span style=&#34;color:#cdcd00&#34;&gt;in&lt;/span&gt; os&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;listdir(image_path):
            &lt;span style=&#34;color:#cdcd00&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;_no.&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#cdcd00&#34;&gt;in&lt;/span&gt; attach &lt;span style=&#34;color:#cdcd00&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;NO&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#cdcd00&#34;&gt;in&lt;/span&gt; attach:
                &lt;span style=&#34;color:#cdcd00&#34;&gt;continue&lt;/span&gt;
            &lt;span style=&#34;color:#cdcd00&#34;&gt;else&lt;/span&gt;:
                os&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;remove(os&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;join(image_path,attach))
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ikke et veldig elegant og effektivt skript, men det er en fin quick fix som finner frem alle de bildene jeg trenger fra 15 eposter og 100 vedlegg i l√∏pet av f√• sekunder.&lt;/p&gt;
&lt;h2 id=&#34;e-poster-fra-google-drive&#34;&gt;E-poster fra Google Drive&lt;/h2&gt;
&lt;p&gt;Den nevnte kunden sender ogs√• en god del e-poster fra Google Drive. I prinsippet fungerer det p√• samme m√•te, men disse epostene inneholder opptil 80‚Äì90 lenker i stedet for vedlegg. Av disse skal jeg klikke p√• de som inneholder norsk tekst (ca. 10 %).&lt;/p&gt;
&lt;p&gt;Quick-fix-l√∏sningen p√• det ble √• lagre epostene som HTML-filer og skrive et raskt skript som bruker &lt;a href=&#34;https://pypi.org/project/beautifulsoup4/&#34;&gt;Python-biblioteket BeautifulSoup&lt;/a&gt; til √• parse HTML. Skriptet henter ut alle lenkene og √•pner dem i nettleseren dersom de slutter p√• &amp;ldquo;_no.gif&amp;rdquo; eller &amp;ldquo;_no.jpg&amp;rdquo;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#ccc;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#cd00cd&#34;&gt;import&lt;/span&gt; bs4&lt;span style=&#34;color:#39c&#34;&gt;,&lt;/span&gt; sys&lt;span style=&#34;color:#39c&#34;&gt;,&lt;/span&gt; webbrowser

&lt;span style=&#34;color:#000080&#34;&gt;# Enter name of HTML email as CL argument&lt;/span&gt;
&lt;span style=&#34;color:#cdcd00&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#cd00cd&#34;&gt;len&lt;/span&gt;(sys&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;argv) &lt;span style=&#34;color:#39c&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#cd00cd&#34;&gt;2&lt;/span&gt;:
	&lt;span style=&#34;color:#cdcd00&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Usage: python get_no_links.py &amp;lt;name of file&amp;gt;&amp;#34;&lt;/span&gt;)
	sys&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;exit()

filename &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; sys&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#cd00cd&#34;&gt;1&lt;/span&gt;]

&lt;span style=&#34;color:#cdcd00&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#cd00cd&#34;&gt;open&lt;/span&gt;(filename) &lt;span style=&#34;color:#cdcd00&#34;&gt;as&lt;/span&gt; f:
	soup &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; bs4&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;BeautifulSoup(f, &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;lxml&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#000080&#34;&gt;# Find all anchor tags in HTML&lt;/span&gt;
lenker &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; soup&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;find_all(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#000080&#34;&gt;# Loop over all anchor tags&lt;/span&gt;
&lt;span style=&#34;color:#cdcd00&#34;&gt;for&lt;/span&gt; lenk &lt;span style=&#34;color:#cdcd00&#34;&gt;in&lt;/span&gt; lenker:
    &lt;span style=&#34;color:#cdcd00&#34;&gt;try&lt;/span&gt;:
		proofname &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; lenk&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;span&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;text
	&lt;span style=&#34;color:#cdcd00&#34;&gt;except&lt;/span&gt;:
		&lt;span style=&#34;color:#cdcd00&#34;&gt;continue&lt;/span&gt;

    &lt;span style=&#34;color:#000080&#34;&gt;# Open all links which ends with &amp;#34;no.gif&amp;#34; or &amp;#34;no.jpg&amp;#34; in web browser&lt;/span&gt;
	&lt;span style=&#34;color:#cdcd00&#34;&gt;if&lt;/span&gt; proofname&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;endswith(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;no.gif&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#cdcd00&#34;&gt;or&lt;/span&gt; proofname&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;endswith(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;no.jpg&amp;#34;&lt;/span&gt;):
		&lt;span style=&#34;color:#cdcd00&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Opened &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#39c&#34;&gt;+&lt;/span&gt; proofname)
		webbrowser&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;open(lenk&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;href&amp;#34;&lt;/span&gt;))

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Velkommen til web-loggen</title>
      <link>https://www.olehammersland.com/blogg/velkommen/</link>
      <pubDate>Sun, 24 Jan 2021 16:56:35 +0100</pubDate>
      
      <guid>https://www.olehammersland.com/blogg/velkommen/</guid>
      <description>&lt;p&gt;Hei og velkommen til den f√∏rste bloggposten min.&lt;/p&gt;
&lt;p&gt;Her vil jeg skrive om oversettelse, spr√•k, programmering og alle andre interesser.&lt;/p&gt;
&lt;p&gt;Jeg vil skrive opp ulike tips og triks og andre prosjekter jeg holder p√• med. Blant annet ser jeg for meg at jeg vil vie litt plass til ulike snarveier og arbeidsflyter jeg har utviklet n√•r jeg arbeider med oversettelsesverkt√∏y som&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;XTRF&lt;/li&gt;
&lt;li&gt;memoQ&lt;/li&gt;
&lt;li&gt;Transit NXT&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jeg arbeider f.eks. ogs√• mye med bash og python for √• automatisere og effektivisere arbeidet mitt. Noen av disse triksene vil jeg ogs√• gjerne forevige i dagbokform.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
