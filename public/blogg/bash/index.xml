<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ole Hammersland sin blogg</title>
    <link>https://www.olehammersland.com/blogg/bash/</link>
    <description>Ole Hammersland sin blogg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Ole Hammersland©2021</copyright>
    <lastBuildDate>Sun, 17 Jul 2022 19:59:21 +0200</lastBuildDate><atom:link href="https://www.olehammersland.com/blogg/bash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Landeveien til Sørlandet</title>
      <link>https://www.olehammersland.com/blogg/landeveien_til_s%C3%B8rlandet/</link>
      <pubDate>Sun, 17 Jul 2022 19:59:21 +0200</pubDate>
      
      <guid>https://www.olehammersland.com/blogg/landeveien_til_s%C3%B8rlandet/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://www.olehammersland.com/images/blogg/sorlandet/sand%C3%B8ya.JPG&#34; alt=&#34;Sørlandet&#34;&gt;&lt;/p&gt;
&lt;p&gt;Om man vil reise til Arendal på sykkel, er det ca. 270–300 km fra Oslo, litt avhengig av hvilken rute man tar. I denne første sykkelbaserte reisen sørover valgte vi en så direkte rute som overhodet mulig, hvilket inkluderte et par ferjer og en kort snarvei langs E18.&lt;/p&gt;
&lt;h2 id=&#34;etappe-1&#34;&gt;Etappe 1&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://www.olehammersland.com/images/blogg/sorlandet/sorlandet1.png&#34; alt=&#34;Oslo til Tønsberg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.olehammersland.com/images/blogg/sorlandet/oppakning.JPG&#34; alt=&#34;Oppakningen&#34;&gt;&lt;/p&gt;
&lt;p&gt;Første etappe gikk fra Tøyen til Tønsberg. Store deler av denne strekningen har jeg syklet mange ganger med utgangspunkt i hjemmet, men jeg hadde aldri tidligere syklet forbi Ås. Vi lot oss villede litt av Google Maps og brukte ca. 13 km på en stadig mer grusete gårdsvei som ikke var forenelig med landeveissyklene, til vi måtte kapitulere og vende om.&lt;/p&gt;
&lt;p&gt;Fin tur nedover, spesielt turen langs østsiden av Årungen er et høydepunkt. Sør for Ås syklet vi gjennom Vestby, som må sies å være dagens bunnpunkt. Veldig bilbasert område med masse store kjøpesentre. Også her syklet vi feil og måtte mobilnavigere gjennom et boligområde for å finne veien videre til Hølen. Vi misset også dessverre innkjøringen til gang-/sykkelbroen over Hølen, som jeg hadde lest om i forveien. Fra Hølen syklet vi en omvei om Son, der vi spiste en vegetarburger på brygga.&lt;/p&gt;
&lt;p&gt;Etter overfarten Moss&amp;ndash;Horten var det en fin siste innspurt til Tønsberg. Merkbart mye bedre sykkelveier i Vestfold &amp;ndash; brede og med tydelig skilting.&lt;/p&gt;
&lt;h2 id=&#34;etappe-2&#34;&gt;Etappe 2&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://www.olehammersland.com/images/blogg/sorlandet/sorlandet2.png&#34; alt=&#34;Tønsberg til Brokelandsheia&#34;&gt;&lt;/p&gt;
&lt;p&gt;Planen for ruten var å komme seg til ferja Helgeroa&amp;ndash;Langesund, hvilket sparer oss for omveien rundt Langangen og Stathelle. Vi hadde først booket et lite rom i Stavern, men det ville medført en svært kort etappe og at vi kanskje hadde brukt fire dager i stedet for tre. Rykter om regn gjorde at vi kansellerte og bestilte nytt rom på Heimat i Brokelandsheia. Hvilket betød at andre etappe ville bli veldig lang.&lt;/p&gt;
&lt;p&gt;Vi startet kl. 10 og gjorde de første ca. 50 km fra Tønsberg til Larvik i et strekk, fordi vi hadde et håp om å rekke ferjeavgangen kl. 12.30. Det stadig svinnende håpet oppgav vi en gang for alle da vi ankom Farris bad, og da ble det en kort rast her. Veien frem til Larvik var fin, spesielt mellom Tønsberg og Sandefjord var det idyllisk gårdslandskap. Etter en banan syklet vi strake veien til Helgeroa langs en middels trafikert vei, og fikk tatt oss en lang pause med mye mat mens vi ventet på avgangen 15.15. Overfarten tok ca. 50 minutter, og det var kaldt og grått.&lt;/p&gt;
&lt;p&gt;Fra Langesund var det bare å forberede seg mentalt på 60 km til, samtidig som det begynte å småregne. Landskapet var nå umiskjennelig mer sørlandsk, altså stort sett heier og skog. De første 15 kilometerne var helt ok, langs gamle E18 (nå Fv363) med middels mye trafikk og en del forbikjøringer. Vi droppet sykkelrute 1 om Valle, da det var en omvei pluss at vi hadde hørt rykter om grus. I ettertid ser det ut til at dette ikke stemte.&lt;/p&gt;
&lt;p&gt;Så kom turens absolutte høydepunkt, der designasjonen Fv363 rent fysisk skifter over til den lille, nesten bilfrie veien som kalles Gamle Sørlandske. Dette skiftet skjer rett etter motorveikrysset Langrønningen, der den nye motorveien i Bamble opphører og E18-trafikken overtar veien vi hadde syklet på så langt.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.olehammersland.com/images/blogg/sorlandet/s%C3%B8rlandske.JPG&#34; alt=&#34;Gamle Sørlandske&#34;&gt;&lt;/p&gt;
&lt;p&gt;Her hadde vi hele den nyasfalterte veien nesten helt for oss selv. Veien snirkler seg opp og ned over de sørlandske heiene gjennom skog og kratt og med flotte utkikkspunkter over mindre innsjøer. Etter Helle/Nordbø blir veien til en tettstedsvei for området nord for Kragerø, men etter Tangen fortsetter Gamle Sørlandske gjennom et flatere landskap med flere gårder. Like vakkert og lite like trafikk, men nå ganske parallelt med E18. Gamle Sørlandske avsluttes ved veien mellom Gjerstad og Risør, og derfra er det kun et lite steinkast bort til Brokelandsheia og overnatting.&lt;/p&gt;
&lt;h1 id=&#34;etappe-3&#34;&gt;Etappe 3&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://www.olehammersland.com/images/blogg/sorlandet/sorlandet3.png&#34; alt=&#34;Brokelandsheia til Arendal&#34;&gt;&lt;/p&gt;
&lt;p&gt;Turens siste og korteste etappe var Brokelandsheia til Arendal. Her har man i prinsippet to muligheter. Man kan følge en fin, men kupert og lengre sykkevei mellom Sørlandsporten/Vinterkjær og Tvedestrand (Fv411, ev. Nævestadveien fra Laget), eller man kan sykle den utrolig vakre Gamle Songeveien parallelt med E18 og så ca. 1,5 km på selve E18 for å nå over til Lunde der den nye motorveien starter. Vi møtte en sykkelgruppe ved Sørlandsporten som sa at det gikk helt fint å sykle det korte strekket langs E18, som også skulle ha en bred veiskulder å falle tilbake på.&lt;/p&gt;
&lt;p&gt;Vi valgte denne siste varianten da det er en strakere og raskere vei. Gamle Songeveien var en kjempeflott og idyllisk strekning i strålende solskinn, minst like flott som Gamle Sørlandske. Møtet med E18 var ikke like lystbetont. Trafikken suste forbi i 80–90 km/t, og det var en kurve som gjorde at sikten ikke var kjempelang. Den brede veiskuldra kunne vi dessverre heller ikke se fra avkjørselen. Skal innrømme at jeg syntes det var litt grenseoverskridende, men vi var ikke klare for å snu, så vi ventet på en god luke og kastet oss ut på veien. En del utålmodige, tutende bilister og farlige forbikjøringer gjorde de første meterne ubehagelige, men heldigvis dukket veiskuldra snart opp og vi kunne holde oss godt ut i siden. Likevel ikke hyggelig når vogntog dundrer forbi med dragsuget sitt. Etter knappe 8 minutter var det heldigvis over, og vi kom oss helskinnet over på avkjørselen til Lunde. Vil ikke anbefale denne ruten for andre enn de mest eventyrlystne, spesielt vogntogene kan gjøre det til en ubehagelig affære. Synd i grunnen, for Gamle Songeveien er virkelig verdt turen. Kilometermessig er det dessuten en veldig effektiv snarvei.&lt;/p&gt;
&lt;p&gt;Fra Lunde er det opp en lang bakke, og så har man valget mellom å dra ned til Tvedestrand og kystveien, eller å dra ned til Fiane og følge gamle E18 (nå Fv421) til Arendal. Dette er en lang og ikke spesielt spennende strekning med god gang-/sykkelvei hele veien.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.olehammersland.com/images/blogg/sorlandet/arendal.JPG&#34; alt=&#34;Arendal kommune&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;etter-ankomst&#34;&gt;Etter ankomst&lt;/h2&gt;
&lt;p&gt;Vi tilbrakte en dag på hytta i Arendal, før vi syklet tilbake til Tvedestrand langs kystveien og derfra til Sandøya. En bilfri øy som kanskje er et av Norges kuleste steder? Her overnattet vi på italiensk gjestehus og kjempet med båtfolket om ferske kanelboller!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.olehammersland.com/images/blogg/sorlandet/ferje.JPG&#34; alt=&#34;Ferja til Sandøya&#34;&gt;&lt;/p&gt;
&lt;p&gt;Derfra syklet vi tilbake til Vinterkjær langs Fv411 og tok bussen hjem til Oslo. Aller helst skulle man ha syklet litt videre til Gjerstad og hoppet på toget, men dessverre er det uansett buss for tog i sommer. Buuuu.&lt;/p&gt;
&lt;p&gt;Turen gav uansett definitivt mersmak. Jeg visste at kvaliteten på sykkelveiene var god i Follo og Vestfold, men jeg var mer usikker på hvordan det ville være i Telemark og Agder. Her ble jeg positivt overrasket. Gamle Sørlandske var turens høydepunkt, og ellers er det flust av mindre trafikkerte fylkesveier å velge mellom. Man må bare være forberedt på at det er en del opp og ned, siden landskapet er 90 % skogkledde heier. Det finnes også mange gode sykkelstier, spesielt rundt Arendal.&lt;/p&gt;
&lt;p&gt;Vil defintivt ta sykkelen sørover igjen.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Brødbaking</title>
      <link>https://www.olehammersland.com/blogg/br%C3%B8dbaking/</link>
      <pubDate>Fri, 29 Apr 2022 13:57:04 +0200</pubDate>
      
      <guid>https://www.olehammersland.com/blogg/br%C3%B8dbaking/</guid>
      <description>&lt;p&gt;Enhver blogg med respekt for seg selv må vel ha minst ett innlegg dedikert til brødbaking =) Due to popular demand, her deler jeg oppskriften på den faste brødoppskriften vi bruker.&lt;/p&gt;
&lt;h2 id=&#34;før-du-legger-deg&#34;&gt;Før du legger deg&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Legg 500 g mel i en bolle. Jeg bruker vanligvis ca. 350 gram vanlig hvetemel og 150 gram sammalt.&lt;/li&gt;
&lt;li&gt;Ta oppi en klunk med olje, jeg pleier å slumpe ca. 1–2 spiseskjeer oppi.&lt;/li&gt;
&lt;li&gt;Ta i én spiseskje tørrgjær og 1/2 spiseskje bordsalt (litt hver for seg)&lt;/li&gt;
&lt;li&gt;Fyll et desilitermål med ca. 5 dl vann og hell oppi under omrøring. Anbefaler en slikekpott her.&lt;/li&gt;
&lt;li&gt;Bland godt i ca. 2–3 min til du har en fuktig, klissete deig omtrent som på bildet nedenfor. Den skal være tyktflytende og jevn. Bruk eventuelt mer eller mindre vann.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://www.olehammersland.com/images/blogg/brod1.JPG&#34; alt=&#34;Elt til en smidig deig&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Dekk til bolla og la stå til neste dag.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;neste-morgen&#34;&gt;Neste morgen&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Legg bakepapir i brødformen. Plasser tunga i munnviken og hell røra forsiktig oppi ved hjelp av slikkepotten. Fordel utover.&lt;/li&gt;
&lt;li&gt;Anbefaler gresskarkjerner og solsikkekjerner øverst. Ikke vits å pøse på, det som ikke fester seg i deigen, faller bare ut.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://www.olehammersland.com/images/blogg/brod2.JPG&#34; alt=&#34;Elt til en smidig deig&#34;&gt;
&lt;img src=&#34;https://www.olehammersland.com/images/blogg/brod3.JPG&#34; alt=&#34;Elt til en smidig deig&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Sett midt i ovnen og vri temperaturen til ca. 180 grader. Sett en timer på 1,5 time.&lt;/li&gt;
&lt;li&gt;Gjør noe annet.&lt;/li&gt;
&lt;li&gt;Når klokka ringer, kan du ta ut. Bør se ca. ut som på bildet nedenfor, og løsne lett fra papiret (som kan oppbevares og brukes på ny).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://www.olehammersland.com/images/blogg/brod4.JPG&#34; alt=&#34;Elt til en smidig deig&#34;&gt;&lt;/p&gt;
&lt;p&gt;Bånn appetitt! Godt, billig og enkelt brød. Kan gjøres lysere ved å redusere/droppe sammalt. Tror prisen på et brød kommer på vel under 10 kroner. En pose hvetemel og en pose sammalt pleier å rekke til ca. 4–5 brød.&lt;/p&gt;
&lt;p&gt;Oppskriften stammer fra &lt;a href=&#34;https://greenbonanza.com/2020/09/17/bonanzabrod-100-eltefritt-og-fool-proof/&#34;&gt;Green Bonanza sin matblogg.&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fornyelse av Let&#39;s Encrypt-sertifikat</title>
      <link>https://www.olehammersland.com/blogg/fornyelse-letsencrypt-sertifikat/</link>
      <pubDate>Mon, 04 Oct 2021 17:02:15 +0200</pubDate>
      
      <guid>https://www.olehammersland.com/blogg/fornyelse-letsencrypt-sertifikat/</guid>
      <description>&lt;p&gt;Jeg hoster min egen epost-tjener under domenet mitt, olehammersland.com. Det fungerer overraskende godt, og har ikke blitt et mål for storslåtte spam-angrep ennå (fingrene krysset). Dermed er det en billig måte å ha en e-post med eget domenenavn – og litt gøy å ha «fikset det selv». Det eneste som er litt skummelt, er når det er på tide å oppdatere SSL-sertifikatet. Siden jeg så sjelden åpner panseret og gjør arbeid på tjeneren, er det alltid litt uvant å orientere seg.&lt;/p&gt;
&lt;p&gt;I dag tidlig var det f.eks. på tide å fornye sertifikatet, som var løpt ut i løpet av helgens Paris-Roubaix-ritt. Jeg gjorde prosessen slik jeg husket det, men glemte å restarte alle programmene som er involvert i e-posttjenesten min. Dermed fungerte fornyelsen av sertifikatet mitt øyensynlig ikke, og det ble en lett stresset og irritabel start på dagen.&lt;/p&gt;
&lt;p&gt;Derfor skriver jeg nå en liten huskeliste til meg selv:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Skru av både Apache, Postfix &lt;strong&gt;OG&lt;/strong&gt; Dovecot med &lt;code&gt;sudo service [---] stop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Kjør Certbot, som av en eller annen grunn ikke ligger under PATH: &lt;code&gt;sudo ~/snap/bin/certbot renew&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Sjekk at alt er fornyet med &lt;code&gt;sudo ~/snap/bin/certbot certificates&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start de tre daemonene igjen.&lt;/li&gt;
&lt;li&gt;Sjekk ev. &lt;code&gt;/var/log/mail.log&lt;/code&gt; for å se at e-posten er oppe.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Viktig å huske å skru av både Postfix og Dovecot 😅!&lt;/p&gt;
&lt;p&gt;Og ja, dette kan selvfølgelig automatiseres, det vet jeg. Vet bare ikke om jeg orker å stikke fingeren i det vepsebolet i nærmeste fremtid&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hammer Faktura versjon 3</title>
      <link>https://www.olehammersland.com/blogg/hammer-faktura-versjon-3/</link>
      <pubDate>Sun, 21 Mar 2021 18:16:42 +0100</pubDate>
      
      <guid>https://www.olehammersland.com/blogg/hammer-faktura-versjon-3/</guid>
      <description>&lt;p&gt;Jeg har oppdatert Hammer Faktura igjen! I denne bloggposten går jeg gjennom hva som er nytt, og gir litt dokumentasjon på hvordan man kan bruke programmet.&lt;/p&gt;
&lt;h2 id=&#34;nytt-i-hammer-faktura-versjon-3&#34;&gt;Nytt i Hammer Faktura versjon 3:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Støtte for sqlite-database muliggjør lagring av fakturaposter, kunder, bankinformasjon og fakturaer.&lt;/li&gt;
&lt;li&gt;Kommandolinjeverktøy for direkte samhandling med databasen.&lt;/li&gt;
&lt;li&gt;Wrapper-funksjoner som forenkler prosessen med å opprette faktuaene.&lt;/li&gt;
&lt;li&gt;Støtte for enkel flerspråklighet, slik at jeg kan skrive ut engelske fakturaer.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;De tidligere utgavene av Hammer Faktura har kun hatt støtte for å opprette fakturaene. Fakturaene har blitt opprettet ved å kjøre data fra eksterne kilder gjennom programmet. Nå legger jeg til støtte for å lagre all relevant informasjon i en egen database. En database er i prinsippet som et Excel-regneark: den inneholder ulike tabeller som er knyttet sammen. Man kan samhandle med databasen med spørringsspråket SQL, eller med andre verktøy og drivere.&lt;/p&gt;
&lt;p&gt;Det er det som er fint med å lagre all informasjonen i en SQL-database: det er en ganske agnostisk måte å lagre data på. Det finnes utallige måter å hente dataene og kjøre regnestykker og analyser på dem, og det er ikke knyttet til noe spesielt program eller programmeringsspråk. Den sentraliserte datastrukturen burde tilfredsstille alle behovene mine for regnskapsføring: f.eks kan jeg regne ut hvor mye penger jeg tjente i løpet av en viss tidsperiode, hvor mye MVA jeg har betalt, hvor mange oppdrag jeg har fått fra kunde X, osv.&lt;/p&gt;
&lt;p&gt;Hammer Faktura har fått en egen modul, &lt;code&gt;hfdb&lt;/code&gt;(Hammer Faktura -database), som er ansvarlig for å samhandle med databasen og knytte informasjonen der sammen med programmet mitt.&lt;/p&gt;
&lt;p&gt;Hammer Faktura kan nå dessuten &lt;a href=&#34;#kommandolinjeverkt%C3%B8y&#34;&gt;kjøres direkte som et skript&lt;/a&gt; med &amp;ldquo;-m&amp;rdquo; flagget til Python.&lt;/p&gt;
&lt;h2 id=&#34;dokumentasjon&#34;&gt;Dokumentasjon&lt;/h2&gt;
&lt;h3 id=&#34;hurtigstart&#34;&gt;Hurtigstart&lt;/h3&gt;
&lt;p&gt;Last ned modulen:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/Oleham/hammer_faktura.git
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Opprett en tom database i nåværende mappe. Navnet vil alltid være &lt;code&gt;hammer_faktura.db&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ python3 -m hammer_faktura.create_tables
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Importer database-modulen &lt;code&gt;hammerfaktura.hfdb&lt;/code&gt; i skriptet ditt. Den inneholder funksjoner for å samhandle med databasen.
Lag en enkel faktura for ett oppdrag:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#ccc;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#cd00cd&#34;&gt;from&lt;/span&gt; hammer_faktura &lt;span style=&#34;color:#cd00cd&#34;&gt;import&lt;/span&gt; hfdb

&lt;span style=&#34;color:#000080&#34;&gt;# Legg til en kunde i databasen.&lt;/span&gt;
client_pk &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; hfdb&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;addClient(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Kunde&amp;#34;&lt;/span&gt;, 
                            &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;934 343 343&amp;#34;&lt;/span&gt;,
                            &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Adresseveien 4, 1234 Oslo&amp;#34;&lt;/span&gt;, 
                            &lt;span style=&#34;color:#cd00cd&#34;&gt;0.25&lt;/span&gt;, 
                            &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;NOK&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#000080&#34;&gt;# Legg til bankinformasjonen din i databasen.&lt;/span&gt;
bank_pk &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; hfdb&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;addBank(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;123.2312.2323&amp;#34;&lt;/span&gt;, 
                        &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;NO87234233&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;NONKIRE&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Banken AS&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#000080&#34;&gt;# Verdien på jobben&lt;/span&gt;
value &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cd00cd&#34;&gt;2320.3&lt;/span&gt;

generator &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; hfdb&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;quickGeneratorFromItem(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;01.01.1990&amp;#34;&lt;/span&gt;,
                                        &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;ID-231&amp;#34;&lt;/span&gt;,
                                        &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Oversettelse kokebok&amp;#34;&lt;/span&gt;,
                                        value,
                                        client_pk, 
                                        bank_pk)

invoice &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; generator&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;makeInvoiceBody()

&lt;span style=&#34;color:#cdcd00&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#cd00cd&#34;&gt;open&lt;/span&gt;(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;faktura.html&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#cdcd00&#34;&gt;as&lt;/span&gt; f:
    f&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;write(invoice)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;hfdb.quickGeneratorFromItem&lt;/code&gt; lar oss legge til en jobb i databasen og umiddelbart skape en faktura for den. Med &lt;code&gt;hfdb.quickGeneratorFromList&lt;/code&gt; kan vi på samme måte legge inn flere oppdrag og umiddelbart skape en faktura.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#ccc;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;jobber &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; [{&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;dato&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd00cd&#34;&gt;1615968966&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;1234&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;beskrivelse&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Oversettelse avis&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;netto&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd00cd&#34;&gt;320.12&lt;/span&gt;
    }, 
    {&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;dato&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd00cd&#34;&gt;1615968100&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;5678&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;beskrivelse&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Korrekturlesning 4 timer&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;netto&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd00cd&#34;&gt;1030.20&lt;/span&gt;
    }, 
    {&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;dato&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd00cd&#34;&gt;1616328966&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;ABCDF&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;beskrivelse&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Kokebok&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;netto&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd00cd&#34;&gt;365.06&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;vat&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd00cd&#34;&gt;0.15&lt;/span&gt; &lt;span style=&#34;color:#000080&#34;&gt;# obs!&lt;/span&gt;
    } 
]

generator &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; hfdb&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;quickGeneratorFromList(jobber, client_pk, bank_pk)

invoice &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; generator&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;makeInvoiceBody()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Merk at det er valgfritt å oppgi en mva-sats på enkeltjobbene. Om det ikke oppgis noen mva-sats, vil standardsatsen for den aktuelle kunden velges (i dette tilfellet 0.25, altså 25 %)&lt;/p&gt;
&lt;h3 id=&#34;samhandling-med-databasen&#34;&gt;Samhandling med databasen&lt;/h3&gt;
&lt;p&gt;La oss ta en titt på hva som skjer i bakgrunnen. Da er det nyttig å først kaste et blikk på strukturen til databasen:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.olehammersland.com/images/blogg/hammer_faktura_database.jpg&#34; alt=&#34;En skjematisk fremstilling av databasen&#34;&gt;&lt;/p&gt;
&lt;p&gt;Som vi ser, består databasen av fire tabeller: invoices, invoice_items, clients og banks. Den viktigste tabellen som knytter alle tabellene sammen, er invoices. Det er alltid knyttet en client og en bank til hver invoice, i et én-til-én-forhold. Samtidig kan flere poster i invoice_items, som representerer de enkelte jobbene, være knyttet til en invoice i et mange-til-én-forhold (en faktura kan inneholde flere fakturaposter).&lt;/p&gt;
&lt;p&gt;I forrige avsnitt viste jeg hvordan man veldig raskt kan skape fakturaer med &lt;code&gt;hfdb.quickGeneratorFromItem&lt;/code&gt; og &lt;code&gt;hfdb.quickGeneratorFromList&lt;/code&gt;. Dette er faktisk to wrapper-funksjoner som «wrapper» en rekke funksjoner for samhandling med databasen, med den hensikt å gjøre det så enkelt så mulig å opprette en faktura hurtig. De gjør to ting med informasjonen som gis dem: de legger dem til i databasen, og så returnerer de en &lt;code&gt;hammer_faktura.Generator&lt;/code&gt;, som vi kan bruke for å skape en faktura.&lt;/p&gt;
&lt;p&gt;La oss ta en titt på hva som skjer i bakgrunnen når vi bruker disse wrapper-funksjonene:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#ccc;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#cd00cd&#34;&gt;from&lt;/span&gt; hammer_faktura &lt;span style=&#34;color:#cd00cd&#34;&gt;import&lt;/span&gt; hfdb

jobber &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; [{&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;dato&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd00cd&#34;&gt;1615968100&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;5678&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;beskrivelse&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Korrekturlesning 4 timer&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;netto&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#cd00cd&#34;&gt;1030.20&lt;/span&gt;,
    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;client&amp;#34;&lt;/span&gt;: client_pk  &lt;span style=&#34;color:#000080&#34;&gt;# obs!&lt;/span&gt;
    },
    [&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;]

&lt;span style=&#34;color:#cdcd00&#34;&gt;for&lt;/span&gt; jobb &lt;span style=&#34;color:#cdcd00&#34;&gt;in&lt;/span&gt; jobber:
    hfdb&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;addItem(jobb)  

invoice_number &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; hfdb&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;addInvoice(client_pk, bank_pk, 
                    dato&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;timestamp, 
                    frist&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd00cd&#34;&gt;30&lt;/span&gt;, 
                    language&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;NO&amp;#34;&lt;/span&gt;)
                                                                                     
hfdb&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;assignItemsByDate(invoice_number, 
                    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;16.03.2021&amp;#34;&lt;/span&gt;,
                    &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;21.03.2021&amp;#34;&lt;/span&gt;)  
  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I dette eksempelet lagrer vi jobbene manuelt i databasen med &lt;code&gt;hfdb.addItem()&lt;/code&gt;. Jobbene lagres i tabellen invoice_items. Merk at vi nå er nødt til å oppgi hvem som er client for hver enkelt jobb, siden vi nå legger til jobbene «uavhengig» av en faktura.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hfdb.addInvoice()&lt;/code&gt; lagrer en faktura i databasen, i tabellen invoices. Det er kun nødvendig å oppgi en kunde og bankinformasjon. Vi kan også oppgi følgende: en egendefinert fakturadato (som timestamp – standard er dagens dato), en egendefinert frist eller velge et annet språk enn norsk. I bakgrunnen blir det automatisk generert et fakturanummer som returneres og lagres i variabelen invoice_number.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hfdb.assignItemsByDate()&lt;/code&gt; knytter så en rekke invoice_item til en invoice i et én-til-flere-forhold. Dette forholdet etableres først når vi kjører denne funksjonen – fakturaposter som ennå ikke er blitt berørt, vil ikke være tilknyttet noen faktura i det hele tatt. Argumentene er fakturanummeret det gjelder og et datospenn. Alle poster i invoice_items med samme client som fakturaen og leveringsdato innenfor tidsspennet, blir knyttet til fakturaen.&lt;/p&gt;
&lt;h3 id=&#34;skape-og-bruke-fakturageneratoren&#34;&gt;Skape og bruke fakturageneratoren&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#ccc;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;[&lt;span style=&#34;&#34;&gt;…&lt;/span&gt;]

generator &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; hfdb&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;makeGenerator(invoice_number)  

body &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; generator&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;makeInvoiceBody()

&lt;span style=&#34;color:#cdcd00&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#cd00cd&#34;&gt;open&lt;/span&gt;(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;faktura.html&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#cdcd00&#34;&gt;as&lt;/span&gt; f:
    f&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;write(body)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Til slutt skaper vi generatoren med funksjonen &lt;code&gt;hfdb.makeGenerator()&lt;/code&gt;. Funksjonen tar et fakturanummer som argument, og forutsetter at det finnes poster i tabellen invoice_items som er knyttet til dette fakturanummeret. Det henter så all informasjon om client, bank, og invoice_items som er knyttet til fakturaen, og lagrer det i generatoren.&lt;/p&gt;
&lt;p&gt;Generatoren er en klasse med tre underklasser, client, invoice og bank, som til sammen inneholder all relevant informasjon om fakturaen fra databasen. Den har også en (wrapper-)metode &lt;code&gt;hammer_faktura.Generator.makeInvoiceBody&lt;/code&gt; som returnerer et html-dokument som en string. &lt;a href=&#34;https://www.olehammersland.com/blogg/fakturaer-del-to/#1-initialisere-kunde-bank-og-faktura&#34;&gt;Se min forrige post for mer informasjon om Generator-objektet&lt;/a&gt;. &lt;code&gt;hfdb.makeGenerator()&lt;/code&gt; er altså en nøkkelfunksjon som forvandler en post i tabellen invoices til en python-klasse vi kan bruke programmet vårt.Vi kan  manuelt overskrive feltene til hammer_faktura.Generator-objektet, f.eks slik:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#ccc;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;generator &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; hfdb&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;quickGeneratorFromList(jobber, client_pk, bank_pk)

generator&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;invoice&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;language &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;        &lt;span style=&#34;color:#000080&#34;&gt;# endre språk.&lt;/span&gt;
generator&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;invoice&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;forfall &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;01.01.2020&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000080&#34;&gt;# overskrive forfallsdatoen&lt;/span&gt;
generator&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;client&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;vat &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#cd00cd&#34;&gt;0.3&lt;/span&gt;               &lt;span style=&#34;color:#000080&#34;&gt;# overskrive mva-satsen&lt;/span&gt;
generator&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;invoice_items[&lt;span style=&#34;color:#cd00cd&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;beskrivelse&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#39c&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34; m.m.&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000080&#34;&gt;# endre en jobb&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Man skal imidlertid ha en ganske god grunn for å gjøre det, for endringene vil ikke gjenspeiles i databasen, kun på fakturaen man så genererer. Om man vil endre på innholdet i databasen, må det gjøre med funksjonene i &lt;code&gt;hfdb&lt;/code&gt;-modulen.&lt;/p&gt;
&lt;h3 id=&#34;navn-og-kontrakter&#34;&gt;Navn og kontrakter&lt;/h3&gt;
&lt;p&gt;I dette prosjektet har jeg blitt inspirert av boken jeg leser for tiden, &lt;em&gt;The Go Programming Language&lt;/em&gt;. Forfatterne av boken går nøye gjennom navnekonvensjonene i Go, og det har vært lærerikt å tilnærme seg en lignende konsekvenstenking når jeg definerer funksjoner og oppførsel i dette prosjektet.&lt;/p&gt;
&lt;p&gt;Som den oppmerksomme leser kanskje har fått med seg, finnes det en rekke funksjoner i Hammer Faktura med prefikset «add», etterfulgt av et objekt i singular. «addInvoice», «addItem», «addClient» og «addBank». Alle disse korresponderer med en tabell i databasen.&lt;/p&gt;
&lt;p&gt;Wrapper-funksjonene starter med «quick» og gir allerede i navnet et hint om hvilke argumenter som må følge: «quickGeneratorFromList» eller «quickGeneratorFromItem».&lt;/p&gt;
&lt;p&gt;Hva er poenget? Hvorfor ikke bare kalle funksjonene for «funksjon1» eller «asdfgh»?&lt;/p&gt;
&lt;p&gt;Vel, ved å skape lignende navn og lignende oppførsel blir det lettere å lese og forstå koden. Det skaper en slags «kontrakt» mellom brukeren og modulen. Konsekvenstenkingen vil også gjøre det lettere for meg å plukke opp koden på et senere tidspunkt. Jeg har for eksempel bestemt at alle «addX»-funksjonene legger til noe i databasen, og at de returnerer primærnøkkelen for den posten de nettopp la til. Dette skal da gjennomføres konsekvent, selv om jeg som regel ikke bruker denne returverdien til noe, unntatt i «addInvoice». Om jeg i fremtiden vil bruke Hammer Faktura på en ny måte, vet jeg imidlertid at det er en mulighet. Det vil også gjøre det lettere å skumme gjennom listen over funksjoner og se hvilke nye funksjoner som kan legges til. Kanskje vil jeg legge til en funksjon kalt «assignItemsById» for å knytte fakturaposter til fakturaer etter jobb-id, i stedet for etter et datospenn med «assignItemsByDate».&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;def addItem(values)&lt;/li&gt;
&lt;li&gt;def addClient(navn, org_nr, adresse, vat, valuta)&lt;/li&gt;
&lt;li&gt;def addBank(konto, iban, bic, bank)&lt;/li&gt;
&lt;li&gt;def addInvoice(client, bank, dato=int(time.time()), frist=30, language=&amp;ldquo;NO&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;def assignItemsByDate(invoice, _from, to)&lt;/li&gt;
&lt;li&gt;def makeGenerator(id)&lt;/li&gt;
&lt;li&gt;def quickGeneratorFromList(items, client, bank)&lt;/li&gt;
&lt;li&gt;def quickGeneratorFromItem(dato, id, beskrivelse, netto, client, bank)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Når jeg ser på listen over funksjoner, vil jeg si at det ser ganske forståelig ut (selvskryt skal man lytte til, for det kommer fra hjertet)! 😬&lt;/p&gt;
&lt;p&gt;I henhold til SQL-konvensjoner er tabellene databasen skrevet i såkalt &lt;em&gt;snake case&lt;/em&gt; i stedet for &lt;em&gt;camel case&lt;/em&gt;, altså &lt;em&gt;slik_som_dette&lt;/em&gt; i stedet for &lt;em&gt;påDenneMåten&lt;/em&gt;. Dessuten står tabellnavn alltid i flertall.&lt;/p&gt;
&lt;h3 id=&#34;kommandolinjeverktøy&#34;&gt;Kommandolinjeverktøy&lt;/h3&gt;
&lt;p&gt;Jeg har begynt å lage støtte for å bruke Hammer Faktura i kommandolinjen. Inntil videre har jeg konsentrert meg spesielt om de operasjonene som ikke må gjøres så ofte: da tenker jeg på det å legge til en ny kunde eller en ny bankforbindelse. Jeg har også støtte for å legge til en enkelt jobb i invoice_item.&lt;/p&gt;
&lt;p&gt;Slik kan Hammer Faktura brukes i kommandolinjen:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ python3 -m hammer_faktura

Usage: python3 -m hammer_faktura [-l/-a] &amp;lt;args&amp;gt;

        list: -l or --list (table name in plural, i.e. &amp;quot;invoices&amp;quot;)
        add: -a or --add (item, bank, client or invoice)

$ python3 -m hammer_faktura -l clients

3       Navn     Org        Adresse     0.25    NOK
4       Test     234234     Adresse     0.25    SEK
5       Navn     43443      Adresse     0.25    SEK
6       Probe    234233     Adresse     0.25    SEK

$ python3 -m hammer_faktura -a client &amp;quot;En ny kunde&amp;quot; 94233465 &amp;quot;Bakketoppen 4, 4567 Kristiansand&amp;quot; 0.25 NOK

        Name: En ny kunde
        Org_nr: 94233465
        Adresse: Bakketoppen 4, 4567 Kristiansand
        VAT rate: 0.25
        Valuta: NOK

Type Y to add client (Y)
Y
Added new client: En ny kunde, 94233465, Bakketoppen 4, 4567 Kristiansand, 0.25, NOK

$ python3 -m hammer_faktura -l clients

3       Navn            Org        Adresse               0.25    NOK
4       Test            234234     Adresse               0.25    SEK
5       Navn            43443      Adresse               0.25    SEK
6       Probe           234233     Adresse               0.25    SEK      
8       En ny kunde     94233465   Bakketoppen 4, 
                                   4567 Kristiansand     0.25    NOK
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Neste punkt på programmet vil være støtte for å lage en faktura direkte i kommandolinjen, på samme måte som &lt;code&gt;hfdb.quickGeneratorFromItem&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Oleham/hammer_faktura&#34;&gt;Se Hammer Faktura på Github!&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Parsing av e-poster 📮</title>
      <link>https://www.olehammersland.com/blogg/epost-parsing/</link>
      <pubDate>Tue, 16 Feb 2021 18:31:38 +0100</pubDate>
      
      <guid>https://www.olehammersland.com/blogg/epost-parsing/</guid>
      <description>&lt;p&gt;Det er ikke alltid mulig å arbeide på en så effektiv måte som mulig. Ofte må man samarbeide med organisasjoner med en egen arbeidsflyt og kultur som ikke nødvendigvis er forenlig med hurtig arbeid.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To av verstingene de fleste oversettere blir tvunget til å bale med, er e-post og Excel-regneark.&lt;/strong&gt; Det er ikke så rart. For flere kunder som ikke nødvendigvis er så teknisk kompetente, fremstår Excel som grei måte å organisere tekst på. På samme måte er e-post en rask og umiddelbar måte å sende ut en fil når det ikke er noen etablert teknisk infrastruktur på plass ennå. Men det er ikke noen solid måte å arbeide på. Det er mange ulemper ved å distribuere filer på e-post:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;oversikt&lt;/li&gt;
&lt;li&gt;kapasitet (mental og tidsmessig)&lt;/li&gt;
&lt;li&gt;stress&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Det første punktet gjelder oversikt: til tross for at jeg har jobbet mye med e-post, føler jeg fortsatt ikke at jeg helt har knekket koden for hvordan man skal sortere e-poster så effektivt som mulig. Spesielt når man også skal sortere flere kunder, flere kontaktpersoner og flere filer. Det har hendt meg at jeg har oversatt feil fil fordi jeg på samme tid fikk to filer tilsendt med tilnærmet samme navn.&lt;/p&gt;
&lt;p&gt;Det at det tar tid å sortere e-post, lagre vedlegg og vedlikeholde mappestrukturer, er også ganske opplagt.&lt;/p&gt;
&lt;p&gt;Balingen med e-post koster også mental &lt;em&gt;kapasitet&lt;/em&gt;. Man er nødt til å konsentrere seg, holde tunga rett i munnen og bruke tid på å sortere og finne frem til riktig filer. Det er dessuten et &lt;em&gt;stressmoment&lt;/em&gt; som henter meg ut av flytsonen jeg helst vil være i når jeg oversetter.
Dessuten er det vel nok rapporter nå om at for mange e-poster ikke er bra for mental helse. Likevel&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;noen-kunder-elsker-e-post&#34;&gt;Noen kunder elsker e-post&lt;/h2&gt;
&lt;p&gt;Det er bare å feise fakta. Som en stakkars frilanser er jeg jo der for å oppfylle kundens behov. Da er det flaks at man kan tenne lys i stedet for å forbanne mørket – ved å lære seg programmering.&lt;/p&gt;
&lt;p&gt;Her vil jeg vise frem to Python-skript jeg har for å forenkle arbeidet med en kunde. Det er en stor kunde med et stort markedsføringsapparat: nyhetsbrev, bannere, TV-reklamer, you name it.
De sender meg ca. 15 e-poster daglig. Hver av disse e-postene inneholder et sted mellom 4 og 50 bilder (jpg eller gif). Bildene inneholder et første utkast av det grafiske innholdet på opptil 6 forskjellige språk. Min jobb er å se på vedleggene med de norske layoutene og lese den norske teksten.&lt;/p&gt;
&lt;p&gt;Det å lese gjennom bildene for å lete etter feil tar, ikke så lang tid. Men det å lese gjennom listen over vedlegg for å finne de som er relevante for meg, tar litt tid. Heldigvis kan det automatiseres med Python 🐍.&lt;/p&gt;
&lt;h2 id=&#34;parsing-med-mailparser&#34;&gt;Parsing med mailparser&lt;/h2&gt;
&lt;p&gt;Ved hjelp av &lt;a href=&#34;https://pypi.org/project/mail-parser/1.2.2/&#34;&gt;mailparser-biblioteket til Python&lt;/a&gt; har jeg derfor raskt laget et skript som:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Leter gjennom alle e-poster i samme mappe.&lt;/li&gt;
&lt;li&gt;Sorterer alle vedlegg etter avsender og e-post.&lt;/li&gt;
&lt;li&gt;Sletter alle som ikke er markert med NO for norsk.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Slik ser det ut:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#ccc;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#cd00cd&#34;&gt;import&lt;/span&gt; os&lt;span style=&#34;color:#39c&#34;&gt;,&lt;/span&gt; mailparser&lt;span style=&#34;color:#39c&#34;&gt;,&lt;/span&gt; re

&lt;span style=&#34;color:#000080&#34;&gt;# Loops over emails in current directory&lt;/span&gt;
&lt;span style=&#34;color:#cdcd00&#34;&gt;for&lt;/span&gt; raw_mail &lt;span style=&#34;color:#cdcd00&#34;&gt;in&lt;/span&gt; os&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;listdir():

    &lt;span style=&#34;color:#000080&#34;&gt;# Unpack all files except the python files.&lt;/span&gt;
    &lt;span style=&#34;color:#000080&#34;&gt;# It is assumed that the current directory only contains emails&lt;/span&gt;
    &lt;span style=&#34;color:#cdcd00&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#cdcd00&#34;&gt;not&lt;/span&gt; raw_mail&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;endswith(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;.py&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#cdcd00&#34;&gt;and&lt;/span&gt; os&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;isfile(raw_mail):

        &lt;span style=&#34;color:#000080&#34;&gt;# Extract sender and subject from email&lt;/span&gt;
        epost_obj &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; mailparser&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;parse_from_file(raw_mail)
        sender &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; epost_obj&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;from_[&lt;span style=&#34;color:#cd00cd&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#cd00cd&#34;&gt;1&lt;/span&gt;]
        subject &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; epost_obj&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;subject
        new_subject &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;sub(&lt;span style=&#34;color:#cd0000&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;\W&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, subject)

        &lt;span style=&#34;color:#000080&#34;&gt;# Create a folder structure based on sender and subject&lt;/span&gt;
        image_path &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;join(sender, new_subject)
        os&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;makedirs(image_path, exist_ok&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;True)

        &lt;span style=&#34;color:#000080&#34;&gt;# Write all attachments to the corresponding folder&lt;/span&gt;
        epost_obj&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;write_attachments(image_path)

        &lt;span style=&#34;color:#000080&#34;&gt;# Delete all files that don&amp;#39;t contain NO in title&lt;/span&gt;
        &lt;span style=&#34;color:#cdcd00&#34;&gt;for&lt;/span&gt; attach &lt;span style=&#34;color:#cdcd00&#34;&gt;in&lt;/span&gt; os&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;listdir(image_path):
            &lt;span style=&#34;color:#cdcd00&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;_no.&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#cdcd00&#34;&gt;in&lt;/span&gt; attach &lt;span style=&#34;color:#cdcd00&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;NO&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#cdcd00&#34;&gt;in&lt;/span&gt; attach:
                &lt;span style=&#34;color:#cdcd00&#34;&gt;continue&lt;/span&gt;
            &lt;span style=&#34;color:#cdcd00&#34;&gt;else&lt;/span&gt;:
                os&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;remove(os&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;join(image_path,attach))
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ikke et veldig elegant og effektivt skript, men det er en fin quick fix som finner frem alle de bildene jeg trenger fra 15 eposter og 100 vedlegg i løpet av få sekunder.&lt;/p&gt;
&lt;h2 id=&#34;e-poster-fra-google-drive&#34;&gt;E-poster fra Google Drive&lt;/h2&gt;
&lt;p&gt;Den nevnte kunden sender også en god del e-poster fra Google Drive. I prinsippet fungerer det på samme måte, men disse epostene inneholder opptil 80–90 lenker i stedet for vedlegg. Av disse skal jeg klikke på de som inneholder norsk tekst (ca. 10 %).&lt;/p&gt;
&lt;p&gt;Quick-fix-løsningen på det ble å lagre epostene som HTML-filer og skrive et raskt skript som bruker &lt;a href=&#34;https://pypi.org/project/beautifulsoup4/&#34;&gt;Python-biblioteket BeautifulSoup&lt;/a&gt; til å parse HTML. Skriptet henter ut alle lenkene og åpner dem i nettleseren dersom de slutter på &amp;ldquo;_no.gif&amp;rdquo; eller &amp;ldquo;_no.jpg&amp;rdquo;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#ccc;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#cd00cd&#34;&gt;import&lt;/span&gt; bs4&lt;span style=&#34;color:#39c&#34;&gt;,&lt;/span&gt; sys&lt;span style=&#34;color:#39c&#34;&gt;,&lt;/span&gt; webbrowser

&lt;span style=&#34;color:#000080&#34;&gt;# Enter name of HTML email as CL argument&lt;/span&gt;
&lt;span style=&#34;color:#cdcd00&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#cd00cd&#34;&gt;len&lt;/span&gt;(sys&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;argv) &lt;span style=&#34;color:#39c&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#cd00cd&#34;&gt;2&lt;/span&gt;:
	&lt;span style=&#34;color:#cdcd00&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Usage: python get_no_links.py &amp;lt;name of file&amp;gt;&amp;#34;&lt;/span&gt;)
	sys&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;exit()

filename &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; sys&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#cd00cd&#34;&gt;1&lt;/span&gt;]

&lt;span style=&#34;color:#cdcd00&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#cd00cd&#34;&gt;open&lt;/span&gt;(filename) &lt;span style=&#34;color:#cdcd00&#34;&gt;as&lt;/span&gt; f:
	soup &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; bs4&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;BeautifulSoup(f, &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;lxml&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#000080&#34;&gt;# Find all anchor tags in HTML&lt;/span&gt;
lenker &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; soup&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;find_all(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#000080&#34;&gt;# Loop over all anchor tags&lt;/span&gt;
&lt;span style=&#34;color:#cdcd00&#34;&gt;for&lt;/span&gt; lenk &lt;span style=&#34;color:#cdcd00&#34;&gt;in&lt;/span&gt; lenker:
    &lt;span style=&#34;color:#cdcd00&#34;&gt;try&lt;/span&gt;:
		proofname &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; lenk&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;span&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;text
	&lt;span style=&#34;color:#cdcd00&#34;&gt;except&lt;/span&gt;:
		&lt;span style=&#34;color:#cdcd00&#34;&gt;continue&lt;/span&gt;

    &lt;span style=&#34;color:#000080&#34;&gt;# Open all links which ends with &amp;#34;no.gif&amp;#34; or &amp;#34;no.jpg&amp;#34; in web browser&lt;/span&gt;
	&lt;span style=&#34;color:#cdcd00&#34;&gt;if&lt;/span&gt; proofname&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;endswith(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;no.gif&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#cdcd00&#34;&gt;or&lt;/span&gt; proofname&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;endswith(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;no.jpg&amp;#34;&lt;/span&gt;):
		&lt;span style=&#34;color:#cdcd00&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Opened &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#39c&#34;&gt;+&lt;/span&gt; proofname)
		webbrowser&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;open(lenk&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;href&amp;#34;&lt;/span&gt;))

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Velkommen til web-loggen</title>
      <link>https://www.olehammersland.com/blogg/velkommen/</link>
      <pubDate>Sun, 24 Jan 2021 16:56:35 +0100</pubDate>
      
      <guid>https://www.olehammersland.com/blogg/velkommen/</guid>
      <description>&lt;p&gt;Hei og velkommen til den første bloggposten min.&lt;/p&gt;
&lt;p&gt;Her vil jeg skrive om oversettelse, språk, programmering og alle andre interesser.&lt;/p&gt;
&lt;p&gt;Jeg vil skrive opp ulike tips og triks og andre prosjekter jeg holder på med. Blant annet ser jeg for meg at jeg vil vie litt plass til ulike snarveier og arbeidsflyter jeg har utviklet når jeg arbeider med oversettelsesverktøy som&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;XTRF&lt;/li&gt;
&lt;li&gt;memoQ&lt;/li&gt;
&lt;li&gt;Transit NXT&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jeg arbeider f.eks. også mye med bash og python for å automatisere og effektivisere arbeidet mitt. Noen av disse triksene vil jeg også gjerne forevige i dagbokform.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
