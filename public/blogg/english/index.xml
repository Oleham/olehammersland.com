<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ole Hammersland sin blogg</title>
    <link>https://www.olehammersland.com/blogg/english/</link>
    <description>Ole Hammersland sin blogg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Ole Hammersland©2021</copyright>
    <lastBuildDate>Fri, 29 Apr 2022 13:57:04 +0200</lastBuildDate><atom:link href="https://www.olehammersland.com/blogg/english/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Brødbaking</title>
      <link>https://www.olehammersland.com/blogg/br%C3%B8dbaking/</link>
      <pubDate>Fri, 29 Apr 2022 13:57:04 +0200</pubDate>
      
      <guid>https://www.olehammersland.com/blogg/br%C3%B8dbaking/</guid>
      <description>&lt;p&gt;Enhver blogg med respekt for seg selv må vel ha minst ett innlegg dedikert til brødbaking =) Due to popular demand, her deler jeg oppskriften på den faste brødoppskriften vi bruker.&lt;/p&gt;
&lt;h2 id=&#34;før-du-legger-deg&#34;&gt;Før du legger deg&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Legg 500 g mel i en bolle. Jeg bruker vanligvis ca. 350 gram vanlig hvetemel og 150 gram sammalt.&lt;/li&gt;
&lt;li&gt;Ta oppi en klunk med olje, jeg pleier å slumpe ca. 1–2 spiseskjeer oppi.&lt;/li&gt;
&lt;li&gt;Ta i én spiseskje tørrgjær og 1/2 spiseskje bordsalt (litt hver for seg)&lt;/li&gt;
&lt;li&gt;Fyll et desilitermål med ca. 5 dl vann og hell oppi under omrøring. Anbefaler en slikekpott her.&lt;/li&gt;
&lt;li&gt;Bland godt i ca. 2–3 min til du har en fuktig, klissete deig omtrent som på bildet nedenfor. Den skal være tyktflytende og jevn. Bruk eventuelt mer eller mindre vann.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://www.olehammersland.com/images/blogg/brod1.JPG&#34; alt=&#34;Elt til en smidig deig&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Dekk til bolla og la stå til neste dag.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;neste-morgen&#34;&gt;Neste morgen&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Legg bakepapir i brødformen. Plasser tunga i munnviken og hell røra forsiktig oppi ved hjelp av slikkepotten. Fordel utover.&lt;/li&gt;
&lt;li&gt;Anbefaler gresskarkjerner og solsikkekjerner øverst. Ikke vits å pøse på, det som ikke fester seg i deigen, faller bare ut.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://www.olehammersland.com/images/blogg/brod2.JPG&#34; alt=&#34;Elt til en smidig deig&#34;&gt;
&lt;img src=&#34;https://www.olehammersland.com/images/blogg/brod3.JPG&#34; alt=&#34;Elt til en smidig deig&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Sett midt i ovnen og vri temperaturen til ca. 180 grader. Sett en timer på 1,5 time.&lt;/li&gt;
&lt;li&gt;Gjør noe annet.&lt;/li&gt;
&lt;li&gt;Når klokka ringer, kan du ta ut. Bør se ca. ut som på bildet nedenfor, og løsne lett fra papiret (som kan oppbevares og brukes på ny).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://www.olehammersland.com/images/blogg/brod4.JPG&#34; alt=&#34;Elt til en smidig deig&#34;&gt;&lt;/p&gt;
&lt;p&gt;Bånn appetitt! Godt, billig og enkelt brød. Kan gjøres lysere ved å redusere/droppe sammalt. Tror prisen på et brød kommer på vel under 10 kroner. En pose hvetemel og en pose sammalt pleier å rekke til ca. 4–5 brød.&lt;/p&gt;
&lt;p&gt;Oppskriften stammer fra &lt;a href=&#34;https://greenbonanza.com/2020/09/17/bonanzabrod-100-eltefritt-og-fool-proof/&#34;&gt;Green Bonanza sin matblogg.&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gjenstridige floskler: Powerful</title>
      <link>https://www.olehammersland.com/blogg/gjenstridige-floskler-powerful/</link>
      <pubDate>Tue, 09 Feb 2021 17:11:05 +0100</pubDate>
      
      <guid>https://www.olehammersland.com/blogg/gjenstridige-floskler-powerful/</guid>
      <description>&lt;p&gt;Dette ordet har jeg de siste månedene bitt meg merke i som en av disse «gjenstridige flosklene» som har som vane å snike seg inn over alt – til og med på tvers av språk!&lt;/p&gt;
&lt;p&gt;De gjenstridige flosklene er litt som falske venner, altså sånt som når man blander sammen &lt;em&gt;chin&lt;/em&gt; og &lt;em&gt;kinn&lt;/em&gt;. I motsetning til falske venner, er gjenstridige floskler imidlertid ikke bundet så veldig til fonetikk, men mer til semantikk, eller betydning. Derfor har de en lei tendens til å transcendere språkgrensene.&lt;/p&gt;
&lt;p&gt;I kildespråket høres floskelen veldig naturlig ut, og det er ikke så lett å få has på betydningen.
Man sitter og grubler litt. Gjør noen Google-søk og ordboksøk. Legger merke til et dobbelt mellomrom et annet sted i teksten og – pang!
I et svakt øyeblikk har oversetteren senket guarden. Floskelen sniker seg gjennom filteret og invaderer det nye språkdomenet.
Oversetteren har mislyktes i sin oppgave som sprogets portvokter.&lt;/p&gt;
&lt;p&gt;I dag fikk jeg servert følgende setning på svensk (redigert litt for anonymisering):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Du får också se hur möjligheterna att förstå och analysera verksamheten kraftfullt kan förbättras.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Det jeg reagerer på, er bruken av orden kraftfullt.
Setningen påstår altså at den vil vise meg hvordan jeg kan forstå og analysere virksomheten på en kraftfull måte.&lt;/p&gt;
&lt;p&gt;Edderkoppsansen min plinger &amp;ndash; nå er det opp med guarden!&lt;/p&gt;
&lt;p&gt;Jeg tror nemlig jeg står overfor en floskel som har klart å smyge seg forbi en stakkars svensk oversetter, og som nå, forkledd som et svensk ord, prøver å trenge enda dypere inn i de skandinaviske språkene.&lt;/p&gt;
&lt;p&gt;Jeg vet jo tilfeldigvis at domenet er IT, og jeg har lagt merke til at engelskspråklige IT-folk &lt;em&gt;elsker&lt;/em&gt; å kalle applikasjoner, søkefelt, grafiske elementer, kodesnutter, biblioteker, egentlig hva som helst, for &lt;strong&gt;powerful&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Sannsynligvis er dette helt ideomatisk engelsk. Jeg ser også at man gjerne snakker om verktøy som &lt;em&gt;powerful&lt;/em&gt;, altså &lt;em&gt;powerful tools&lt;/em&gt;.
Her ligger det altså en forståelse av at også uhåndgripelig programvare kan være verktøy, noe jeg slett ikke er uenig i.
Men når jeg først og fremst forbinder ordet &lt;em&gt;powerful&lt;/em&gt; med faktisk «mektig, kraftfull», så kan det noen ganger fortone seg som litt morsomt.&lt;/p&gt;
&lt;p&gt;Se f.eks. i &lt;a href=&#34;https://www.ubuntupit.com/best-linux-commands-to-run-in-the-terminal/&#34;&gt;denne gjennomgangen av nyttige Linux-kommandoer&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The echo command is a very powerful command-line utility that lets you output a specific text to the terminal console.&lt;/p&gt;
&lt;p&gt;The exciting thing about this little yet powerful command is that you will often use it among other terminal commands when creating bootable live USB sticks.&lt;/p&gt;
&lt;p&gt;The kill command is a powerful way to stop processes that are stuck due to resource constraints.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ordet maner hos meg frem et mentalt bilde av en tordengud, av orkaner og av ville krefter. Derfor har jeg altid synes at slike formuleringer blir litt morsomme.&lt;/p&gt;
&lt;h2 id=&#34;hva-ligger-bak-floskelen&#34;&gt;Hva ligger bak floskelen?&lt;/h2&gt;
&lt;p&gt;Bruken kommer sannsynligvis fra engelsk markedsføringsspråk for verktøy, men har så utviklet seg til å bli en floskel – altså et uttrykk det har gått inflasjon i.&lt;/p&gt;
&lt;p&gt;Da mister ordet litt av sin opprinnelige tyngde. Semantisk sett betegner det i dag kanskje ikke mer enn et «veldig nyttig verktøy».&lt;/p&gt;
&lt;p&gt;Derfra har det sneket seg inn programvareverdenen. De av oss (ikke-engelskspråklige) som ikke kjenner denne floskelbruken fra det mer hverdagligse verktøydomenet, &lt;a href=&#34;https://softwareengineering.stackexchange.com/questions/75479/why-is-every-programming-language-powerful&#34;&gt;stusser veldig&lt;/a&gt;.
IT-bransjen er grunnleggende internasjonal, så derfra flyter floskelen ut i veldig mange tekster som skal oversettes. Oversettere står overfor et dillemma! Kan jeg virkelig beskrive dette chatteprogrammet som &lt;em&gt;mektig&lt;/em&gt;? Og kan et søkefelt i et CMS være &lt;em&gt;kraftfullt&lt;/em&gt;?&lt;/p&gt;
&lt;p&gt;Jaja, jeg antar at man kan &lt;em&gt;forstå en virksomhet på en kraftfull måte&lt;/em&gt;, det er forståelig nok.&lt;/p&gt;
&lt;p&gt;Jeg har i det siste sett &lt;em&gt;powerful&lt;/em&gt; dukke opp i både svenske og danske kildetekster. Ofte fører det med seg rare setningsstrukturer – åpenbart har noen klødd seg litt i hodet for å få betydningen til å henge sammen. I tysk også, men siden tyskerne også har sansen for et superlativ-befenget språk, tas det umerkelig opp i uttrykk som &lt;em&gt;leistungsstark&lt;/em&gt;, &lt;em&gt;mächtig&lt;/em&gt; eller &lt;em&gt;potent&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Selv synes jeg det ser litt merkelig ut med både kraftfull, mektig og potent. Hvorfor bruke en engelskspråklig floskel på norsk, når det vil være mye mer naturlig å kalle det «nyttig», «uunnværlig». Om man faktisk beskriver en superdatamaskin med rå regnekraft, ville jeg nok ikke reagert om den ble beskrevet som «kraftig». Men en kraftig webapplikasjon? Låter litt rart.&lt;/p&gt;
&lt;p&gt;I dette tilfellet endte jeg opp med å oversette slik:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Du får også se hvordan du kan forbedre mulighetene for en dypere forståelse og analyse av virksomheten.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Aller helst ville jeg også kuttet ned litt på setningen, fordi jeg antar jeg like så godt kunne sagt:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Du får også lære hvordan du kan oppnå en dypere forståelse og analyse av virksomheten.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Jeg antar at leddet med &lt;em&gt;forbedre mulighetene for&lt;/em&gt; også har trengt gjennom språkfilteret til oversetteren før meg, men der går da min grense for hvor langt jeg synes det er verdt å fjerne seg fra kildespråket.
I dette tilfellet vil budskapt bli det samme, så da dropper jeg den lille forbedringen.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Automatisk registrering av kunder i XTRF</title>
      <link>https://www.olehammersland.com/blogg/automatisk-registrering-kunder-xtrf/</link>
      <pubDate>Wed, 27 Jan 2021 19:46:15 +0100</pubDate>
      
      <guid>https://www.olehammersland.com/blogg/automatisk-registrering-kunder-xtrf/</guid>
      <description>&lt;p&gt;Denne bloggposten beskriver et lite pilotkonsept jeg lagde i fjor. Jeg arbeidet da som selger for GLOBALscandinavia AS, og hadde ansvaret for å forberede tilbud til kunder som meldte seg via nettsiden vår. &lt;a href=&#34;https://github.com/Oleham/xtrf_client_registration&#34;&gt;Den samme oppsummeringen ligger ute på min Github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dette prosjektet var en god trening i å bruke både Django og JSON-API. Jeg måtte sette meg inn det å selv lage et API, og det å forstå dokumentasjonen til API-et noen andre har laget.
Husker det var spesielt morsomt å utvide funksjonaliteten med automatiske varsler til Teams! Og ikke minst var det min første erfaring med &lt;a href=&#34;https://www.linode.com&#34;&gt;Linode&lt;/a&gt;, hvor man kan leie seg en liten virtuell server for noen få euro i måneden. Det er tjenesten jeg nå hoster denne nettsiden på.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;automatically-registering-clients-on-the-xtrf-translation-system&#34;&gt;Automatically registering clients on the XTRF translation system&lt;/h2&gt;
&lt;h3 id=&#34;why&#34;&gt;Why?&lt;/h3&gt;
&lt;p&gt;Working as a sales person at a translation agency, I recieved numerous requests from potential clients requesting a quote. The requests are usually sent to a large number of agencies in order for them to compare prices. Sending these probably didn&amp;rsquo;t take the potential clients very long. However, I found that registering them in XTRF so that I could prepare a quote ended up eating up a lot of my time.&lt;/p&gt;
&lt;p&gt;XTRF is a nice enough TMS (Translation Management System), but it&amp;rsquo;s heavy: with a lot of menus. Most of the time, you end up entering the same information for everyone. So why not automate the process?&lt;/p&gt;
&lt;h3 id=&#34;gathering-information&#34;&gt;Gathering information&lt;/h3&gt;
&lt;p&gt;Interestingly enough, most potential clients went through our web page in order to request a quote. There, they would be able to enter their basic contact information along with their request. I would then register them as a new client in the XTRF database, drawing on online sources to find the missing pieces. Especially the organization number or CSV-number, which is needed for tax reasons.&lt;/p&gt;
&lt;p&gt;In my new project, I would allow the clients to simply enter this information themselves. The tax number (organization number in Sweden/Norway, CVR in Denmark) is the most important piece of information. Depending on which Scandinavian country the company was from, I would know what else to set up when registering them to the XTRF database: project managers, invoicing settings, responsible sales person, etc.&lt;/p&gt;
&lt;p&gt;Of course, it would also be nice to keep all the not so serious-sounding clients out of our XTRF database. I came up with a simple architecture looking something like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.olehammersland.com/images/blogg/automatisk-registrering-kunder-xtrf-chart.png&#34; alt=&#34;The architecture of my site&#34;&gt;&lt;/p&gt;
&lt;p&gt;Here, the clients could interact with our web page (represented by the IP adress in the illustration). The sales team (&amp;ldquo;Salg&amp;rdquo;) would recieve a notification, and choose whether to subsequently transfer the information from the web page into the main XTRF database.&lt;/p&gt;
&lt;p&gt;By first having the potential clients enter their information into an intermediary database, my translation agency would be able to screen the requests before choosing to automatically registering them on XTRF. That&amp;rsquo;s good, as we&amp;rsquo;d get a lot of requests for smaller translation jobs, two-pagers like CVs and diplomas, which wasn&amp;rsquo;t something we as a B2B translation agency would do.&lt;/p&gt;
&lt;p&gt;A more prominent reason for this architecture is also simply the fact that I was learning Django at the time. I thought this would be a good opportunity to make use of the &lt;a href=&#34;https://www.django-rest-framework.org/&#34;&gt;Django REST API framework&lt;/a&gt;. I quickly built a very simple pilot web site containing only one form in the frontend.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.olehammersland.com/images/blogg/automatisk-registrering-kunder-xtrf-form.jpg&#34; alt=&#34;The form for collecting user input&#34;&gt;&lt;/p&gt;
&lt;p&gt;Here, the potential clients would be able enter their information and write a short message to request a quote.
This form was linked to the following Django model:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#ccc;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#cdcd00&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00cdcd&#34;&gt;Company&lt;/span&gt;(models&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;Model):
    name &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; models&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;CharField(max_length&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd00cd&#34;&gt;300&lt;/span&gt;, verbose_name&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Name&amp;#34;&lt;/span&gt;)
    publish_date &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; models&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;DateTimeField(auto_now&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;True)
    adressLine1 &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; models&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;CharField(max_length&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd00cd&#34;&gt;200&lt;/span&gt;, verbose_name&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Adress Line 1&amp;#34;&lt;/span&gt;)
    adressLine2 &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; models&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;CharField(blank&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;True, max_length&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd00cd&#34;&gt;200&lt;/span&gt;, verbose_name&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Adress Line 2&amp;#34;&lt;/span&gt;)
    area_code &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; models&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;CharField(blank&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;True, max_length&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd00cd&#34;&gt;200&lt;/span&gt;, verbose_name&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Area Code&amp;#34;&lt;/span&gt;)
    email &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; models&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;EmailField(verbose_name&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;E-Mail&amp;#34;&lt;/span&gt;)
    phone_number &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; models&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;CharField(max_length&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd00cd&#34;&gt;200&lt;/span&gt;, verbose_name&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Phone Number&amp;#34;&lt;/span&gt;)
    city &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; models&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;CharField(blank&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;True, max_length&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd00cd&#34;&gt;200&lt;/span&gt;, verbose_name&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;City&amp;#34;&lt;/span&gt;)
    country_id &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; models&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;ForeignKey(Country, on_delete&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;models&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;CASCADE, verbose_name&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Country&amp;#34;&lt;/span&gt;)
    idNumber &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; models&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;CharField(blank&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;True, max_length&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd00cd&#34;&gt;30&lt;/span&gt;, verbose_name&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Company ID/Org.No./CVR No.&amp;#34;&lt;/span&gt;)
    document &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; models&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;FileField(blank&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;True, upload_to&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#39;documents/&amp;#39;&lt;/span&gt;, verbose_name&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;Upload Files that need translating&amp;#34;&lt;/span&gt;)
    freetext &lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt; models&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;TextField(blank&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;True, verbose_name&lt;span style=&#34;color:#39c&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;What can we help you with?&amp;#34;&lt;/span&gt;)

    &lt;span style=&#34;color:#cdcd00&#34;&gt;def&lt;/span&gt; __str__(self):
        &lt;span style=&#34;color:#cdcd00&#34;&gt;return&lt;/span&gt; self&lt;span style=&#34;color:#39c&#34;&gt;.&lt;/span&gt;name

    &lt;span style=&#34;color:#cdcd00&#34;&gt;def&lt;/span&gt; get_absolute_url(self):
        &lt;span style=&#34;color:#cdcd00&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#cd0000&#34;&gt;&amp;#34;success/&amp;#34;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A Django model defines the database fields for the table which is connected to the web page form. When the user submits the form, the information is organized and stored in the corresponding fields of that database table (sort of like an Excel spreadsheet).
As you might tell from the model, the potential client would also be able to directly upload the file he or she wanted translated.&lt;/p&gt;
&lt;h3 id=&#34;registering&#34;&gt;Registering&lt;/h3&gt;
&lt;p&gt;When someone entered the above information to request a quote, all the information was stored on the database of my Django site. It was then accessible via the Django REST API in JSON format.&lt;/p&gt;
&lt;p&gt;I would get an email from the server informing me of the request. Also, my team would recieve a message on &lt;a href=&#34;https://docs.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/connectors-using&#34;&gt;Teams through a connector&lt;/a&gt;, which would allow us to directly discuss the request.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.olehammersland.com/images/blogg/automatisk-registrering-kunder-xtrf-teams.jpg&#34; alt=&#34;Demo of the Teams connector&#34;&gt;&lt;/p&gt;
&lt;p&gt;If we deemed the request as serious, we would run the python script &lt;strong&gt;add_client.py&lt;/strong&gt;, using the ID of the request as an argument, i.e. &lt;code&gt;python3 add_client.py 23&lt;/code&gt;. The script downloaded the information from the Django API and instantly uploaded it to the XTRF database through the &lt;a href=&#34;https://www.xtrf.eu/xtrf-api-doc/home-api&#34;&gt;Home Portal API&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;to-test-the-django-site&#34;&gt;To test the Django site&lt;/h3&gt;
&lt;p&gt;Install something similar to the requirements in &lt;strong&gt;requirements.txt&lt;/strong&gt;.
Go into the client_registration folder, migrate the database and run the test server.
Add a super user so that you will be able to log in to the admin and API panels.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#ccc;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#cd00cd&#34;&gt;cd&lt;/span&gt; client_registration
python3 manage.py makemigrations
python3 manage.py makemigrations registration_app
python3 manage.py migrate
python3 manage.py createsuperuser
python3 manage.py runserver
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Go to localhost:8000 and try adding someone to your database. You should see the company you added on localhost:8000/api/companies&lt;/p&gt;
&lt;p&gt;To review the email and Teams-functionality, check out the commented out code in &lt;strong&gt;client_registration/registration_app/views.py&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;to-sum-up&#34;&gt;To sum up&lt;/h3&gt;
&lt;p&gt;This was a fun &amp;ldquo;proof-of-concept&amp;rdquo;. XTRF is a very big TMS that aims to satisfy every thinkable need. For us, the translation business is mostly fast-moving and fluid. Why invest too much time in a potential client when the likelihood of them picking one of the fifteen other agencies they contacted is so high?&lt;/p&gt;
&lt;p&gt;Advantages of automating client registration in XTRF:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Instantanous registration within seconds&lt;/li&gt;
&lt;li&gt;All standard fields entered correctly based on country&lt;/li&gt;
&lt;li&gt;No danger of spam, as the client go through an intermediate server&lt;/li&gt;
&lt;li&gt;Teams integration – better communication!&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
